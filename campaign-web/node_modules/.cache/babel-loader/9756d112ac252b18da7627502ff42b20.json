{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\App.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/pages/Home';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Campaigns from './components/pages/Campaigns';\nimport Profile from './components/pages/Profile';\nimport SignUp from './components/pages/SignUp';\nimport Login from './components/pages/Login';\nimport Write from './components/pages/Write';\nimport Post from './components/pages/Post';\nimport sucessForm from './components/accountBox/FormSuccess';\nimport { AuthContext } from \"./Context/AuthContext\";\nimport './components/Navbar.css';\nimport { Button } from './components/Button';\nimport axios from 'axios';\n\nfunction App() {\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false\n  }); // const [click, setClick] = useState(false);\n  // const [button, setButton] = useState(true);\n  // const handleClick = () => setClick(!click);\n  // const closeMobileMenu = () => setClick(false);\n  // const showButton = () => {\n  //   if (window.innerWidth <= 960) {\n  //     setButton(false);\n  //   } else {\n  //     setButton(true);\n  //   }\n  // };\n\n  useEffect(() => {\n    // showButton();\n    axios.get(\"http://localhost:5000/auth/verification\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setAuthState({ ...authState,\n          status: false\n        });\n      } else {\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true\n        });\n      }\n    });\n  }, []); // const logout = (e) => {\n  //   e.preventDefault();\n  //   localStorage.removeItem(\"accessToken\");\n  //   setAuthState({ username: \"\", id: 0, status: false });\n  //   window.location.href = '/';\n  // };\n  // window.addEventListener('resize', showButton);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      authState,\n      setAuthState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), !authState ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    path: \"/sign-up\",\n    exact: true,\n    component: SignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/success-form\",\n    exact: true,\n    component: sucessForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    path: \"/write\",\n    component: Write,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/campaigns\",\n    exact: true,\n    component: Campaigns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/my-profile\",\n    component: Profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/post/:id\",\n    exact: true,\n    component: Post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/App.js"],"names":["React","useState","useEffect","Home","BrowserRouter","Router","Switch","Route","Link","Navbar","Campaigns","Profile","SignUp","Login","Write","Post","sucessForm","AuthContext","Button","axios","App","authState","setAuthState","username","id","status","get","headers","accessToken","localStorage","getItem","then","response","data","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/pages/Home';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Campaigns from './components/pages/Campaigns';\nimport Profile from './components/pages/Profile';\nimport SignUp from './components/pages/SignUp';\nimport Login from './components/pages/Login';\nimport Write from './components/pages/Write';\nimport Post from './components/pages/Post';\nimport sucessForm from './components/accountBox/FormSuccess';\nimport { AuthContext } from \"./Context/AuthContext\";\nimport './components/Navbar.css';\nimport { Button } from './components/Button';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false,\n  });\n  // const [click, setClick] = useState(false);\n  // const [button, setButton] = useState(true);\n\n  // const handleClick = () => setClick(!click);\n  // const closeMobileMenu = () => setClick(false);\n  // const showButton = () => {\n  //   if (window.innerWidth <= 960) {\n  //     setButton(false);\n  //   } else {\n  //     setButton(true);\n  //   }\n  // };\n\n  useEffect(() => {\n    // showButton();\n\n    axios.get(\"http://localhost:5000/auth/verification\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      }\n    }).then((response) => {\n      if (response.data.error) {\n        setAuthState({ ...authState, status: false });\n      } else {\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true,\n        });  \n      }\n    });\n    \n  }, []);\n\n  // const logout = (e) => {\n  //   e.preventDefault();\n  //   localStorage.removeItem(\"accessToken\");\n  //   setAuthState({ username: \"\", id: 0, status: false });\n  //   window.location.href = '/';\n  // };\n\n  // window.addEventListener('resize', showButton);\n  return (\n    <>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n          <Navbar />\n          {/* <nav className='navbar'>\n            <div className='navbar-container'>\n              <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n                Campaign <img className='img-logo' src=\"images/logo.png\" alt=\"\" width=\"70\" height=\"50\" /> with Us\n\n              </Link>\n              <div className='menu-icon' onClick={handleClick} >\n                <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n              </div>\n              <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li className='nav-item'>\n                  <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                    Home\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link\n                    to='/campaigns'\n                    className='nav-links'\n                    onClick={closeMobileMenu}\n                  >\n                    Campaigns\n                  </Link>\n                </li>\n\n                {authState.status ?\n                  (<li className='nav-item'>\n                    <Link\n                      to='/write'\n                      className='nav-links'\n                      onClick={closeMobileMenu}\n                    >Post</Link>\n                  </li>) : (<li className='nav-item'>\n                    <Link\n                      to='/login'\n                      className='nav-links'\n                      onClick={closeMobileMenu}\n                    >Post</Link>\n                  </li>)}\n\n                {authState.status &&\n                  <li className='nav-item'>\n                    <Link\n                      to='/my-profile'\n                      className='nav-links'\n                      onClick={closeMobileMenu}\n                    >\n                      My Profile\n                    </Link>\n                  </li>\n                }\n                {!authState.status ?\n                  (<li>\n                    <Link\n                      to='/login'\n                      className='nav-links-mobile'\n                      onClick={closeMobileMenu}\n                    >\n                      Login/Signup\n                    </Link>\n                  </li>) : (<li>\n                    <Link\n                      to='/'\n                      className='nav-links-mobile'\n                      onClick={logout}\n                    >\n                      Logout\n                    </Link>\n                  </li>)}\n              </ul>\n              {!authState.status ? (<div>{button && (<Button buttonStyle='btn--signup'>Login/Signup</Button>)}</div>) : (<div><span className='userNav'>{authState.username}</span>{button && (<Button onClick={logout} buttonStyle='btn--signup'>Logout</Button>)}</div>)}\n            </div>\n          </nav> */}\n          <Switch>\n          <Route path='/' exact component={Home} />\n            {!authState ?(\n              <>\n              <Route path='/sign-up' exact component={SignUp} />\n            <Route path='/login' exact component={Login} />\n            <Route path='/success-form' exact component={sucessForm} />\n              </>\n            ) : (\n                <>\n             <Route path='/write' component={Write} />   \n            <Route path='/campaigns' exact component={Campaigns} />\n            <Route path='/my-profile' component={Profile} />\n                </>\n            )\n          }\n            \n            <Route path='/post/:id' exact component={Post} />\n            \n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}