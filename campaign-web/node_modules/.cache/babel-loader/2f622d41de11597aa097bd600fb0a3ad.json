{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\Cards.js\";\nimport React from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { useEffect, useState } from \"react\";\n\nfunction Cards() {\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [signedPosts, setSignedPosts] = useState([]);\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      axios.get(\"http://localhost:5000/posts/visitors\").then(response => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map(sign => {\n          return sign.PostId;\n        }));\n      });\n    } else {\n      axios.get(\"http://localhost:5000/posts\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map(sign => {\n          return sign.PostId;\n        }));\n      });\n    }\n  }, []);\n\n  const signAPost = postId => {\n    axios.post(\"http://localhost:5000/signatures\", {\n      PostId: postId\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.map(post => {\n        if (post.id === postId) {\n          if (response.data.signed) {\n            return { ...post,\n              Signatures: [...post.Signatures, 0]\n            };\n          } else {\n            const signatureArray = post.Signatures;\n            signatureArray.pop();\n            return { ...post,\n              Signatures: signatureArray\n            };\n          }\n        } else {\n          return post;\n        }\n      }));\n\n      if (signedPosts.includes(postId)) {\n        setSignedPosts(signedPosts.filter(id => {\n          return id != postId;\n        }));\n      } else {\n        setSignedPosts([...signedPosts, postId]);\n      }\n    });\n  };\n\n  const vistorClick = () => {\n    window.location.href = '/login';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Check out these fantastic Campaigns!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"homeCards_campaign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, listOfPosts.slice(0, 2).map((value, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"homeCard\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardItem, {\n      key: key,\n      src: \"images/img-9.jpg\",\n      title: value.title,\n      text: value.postText.length > 180 ? value.postText.substring(0, 180).replace(/<[^>]+>|&[^>]+;/g, '').replace(/<img[\\\\d\\\\D]*?\\/img>/, '') + \"...\" : value.postText.replace(/<[^>]+>|&[^>]+;/g, '').replace(/<img(.*?)\\\">/i, ''),\n      topic: value.topic,\n      username: value.username,\n      dateTime: moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\"),\n      path: `/post/${value.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, localStorage.getItem(\"accessToken\") ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }, !signedPosts.includes(value.id) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 61\n      }\n    }, \"Sign\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSigned\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }\n    }, \"Signed\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, value.Signatures.length)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: vistorClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }\n    }, \"Sign\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 27\n      }\n    }, value.Signatures.length))));\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, listOfPosts.slice(2, 5).map((value, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"homeCard2\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardItem, {\n      key: key,\n      src: \"images/img-9.jpg\",\n      title: value.title,\n      text: value.postText.length > 110 ? value.postText.substring(0, 110).replace(/<[^>]+>/g, '') + \"...\" : value.postText.replace(/<[^>]+>/g, ''),\n      topic: value.topic,\n      username: value.username,\n      dateTime: moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\"),\n      path: `/post/${value.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, localStorage.getItem(\"accessToken\") ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, !signedPosts.includes(value.id) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 61\n      }\n    }, \"Sign\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSigned\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 28\n      }\n    }, \"Signed\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, value.Signatures.length)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: vistorClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 27\n      }\n    }, \"Sign\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }\n    }, value.Signatures.length))));\n  })))));\n}\n\nexport default Cards;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/Cards.js"],"names":["React","CardItem","axios","moment","useEffect","useState","Cards","listOfPosts","setListOfPosts","signedPosts","setSignedPosts","localStorage","getItem","get","then","response","data","map","sign","PostId","headers","accessToken","signAPost","postId","post","id","signed","Signatures","signatureArray","pop","includes","filter","vistorClick","window","location","href","slice","value","key","title","postText","length","substring","replace","topic","username","createdAt","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { useEffect, useState } from \"react\";\n\n\nfunction Cards() {\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [signedPosts, setSignedPosts] = useState([]);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      axios.get(\"http://localhost:5000/posts/visitors\").then((response) => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map((sign) => {\n          return sign.PostId;\n        }))\n      });\n    } else {\n      axios.get(\"http://localhost:5000/posts\", {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      }).then((response) => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map((sign) => {\n          return sign.PostId;\n        }))\n      });\n    }\n\n  }, []);\n\n  const signAPost = (postId) => {\n    axios.post(\"http://localhost:5000/signatures\", {\n      PostId: postId\n    },\n      { headers: { accessToken: localStorage.getItem(\"accessToken\") } }\n    ).then((response) => {\n      setListOfPosts(listOfPosts.map((post) => {\n        if (post.id === postId) {\n          if (response.data.signed) {\n            return { ...post, Signatures: [...post.Signatures, 0] };\n          } else {\n            const signatureArray = post.Signatures;\n            signatureArray.pop();\n            return { ...post, Signatures: signatureArray };\n          }\n        } else {\n          return post;\n        }\n      })\n      );\n\n      if (signedPosts.includes(postId)) {\n        setSignedPosts(\n          signedPosts.filter((id) => {\n            return id != postId;\n          })\n        );\n      } else {\n        setSignedPosts([...signedPosts, postId]);\n      }\n    });\n  };\n\n  const vistorClick = () => {\n    window.location.href = '/login';\n  }\n  return (\n    <div className='cards'>\n      <h1>Check out these fantastic Campaigns!</h1>\n      <div className='cards__container'>\n        <div className='cards__wrapper' >\n\n          <ul className='homeCards_campaign'>\n            {listOfPosts.slice(0, 2).map((value, key) => {\n              return (\n                <div className='homeCard' key={key}>\n                  <CardItem key={key}\n                    src='images/img-9.jpg'\n                    title={value.title}\n                    text={value.postText.length > 180 ? (value.postText.substring(0, 180).replace(/<[^>]+>|&[^>]+;/g, '')\n                      .replace(/<img[\\\\d\\\\D]*?\\/img>/, '') + \"...\") : value.postText.replace(/<[^>]+>|&[^>]+;/g, '')\n                        .replace(/<img(.*?)\\\">/i, '')}\n                    topic={value.topic}\n                    username={value.username}\n                    dateTime={moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\")}\n                    path={`/post/${value.id}`}\n                  />\n                  <div className='signContainer'>\n\n                    {localStorage.getItem(\"accessToken\") ? (\n                      <div>\n                        {!signedPosts.includes(value.id) ? (<button className='btnSign' onClick={() => {\n                          signAPost(value.id);\n                        }}>Sign</button>) :\n                          (<button className='btnSigned' onClick={() => {\n                            signAPost(value.id);\n                          }}>Signed</button>)}\n                        <label className='signNo'>{value.Signatures.length}</label>\n                      </div>\n                    ) :\n                      (\n                        <div>\n                          <button className='btnSign' onClick={vistorClick}>Sign</button>\n                          <label className='signNo'>{value.Signatures.length}</label>\n                        </div>\n                      )}\n                  </div>\n                </div>\n              )\n            })}\n          </ul>\n          <ul className='cards__items'>\n            {listOfPosts.slice(2, 5).map((value, key) => {\n              return (\n\n                <div className='homeCard2' key={key}>\n                  <CardItem key={key}\n                    src='images/img-9.jpg'\n                    title={value.title}\n                    text={value.postText.length>110?value.postText.substring(0,110).replace(/<[^>]+>/g, '')+\"...\":value.postText.replace(/<[^>]+>/g, '')}\n                    topic={value.topic}\n                    username={value.username}\n                    dateTime={moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\")}\n                    path={`/post/${value.id}`}\n                  ></CardItem>\n                  <div className='signContainer'>\n                    {localStorage.getItem(\"accessToken\") ? (\n                      <div>\n                        {!signedPosts.includes(value.id) ? (<button className='btnSign' onClick={() => {\n                          signAPost(value.id);\n                        }}>Sign</button>) :\n                          (<button className='btnSigned' onClick={() => {\n                            signAPost(value.id);\n                          }}>Signed</button>)}\n                        <label className='signNo'>{value.Signatures.length}</label>\n                      </div>\n                    ) :\n                      (\n                        <div>\n                          <button className='btnSign' onClick={vistorClick}>Sign</button>\n                          <label className='signNo'>{value.Signatures.length}</label>\n                        </div>\n                      )}\n                  </div>\n\n                </div>\n\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}