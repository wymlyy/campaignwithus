{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\Campaigns.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport ReactPaginate from \"react-paginate\";\nimport '../../App.css';\nimport '../Cards.css';\nimport CardItem from '../CardItem';\nimport moment from \"moment\";\nimport axios from \"axios\";\nexport default function Campaigns() {\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [signedPosts, setSignedPosts] = useState([]);\n  const [pageNum, setPageNum] = useState(0);\n  const postsPerPage = 9;\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      axios.get(\"http://localhost:5000/posts/visitors\").then(response => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map(sign => {\n          return sign.PostId;\n        }));\n      });\n    } else {\n      axios.get(\"http://localhost:5000/posts\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map(sign => {\n          return sign.PostId;\n        }));\n      });\n    }\n  }, []);\n\n  const signAPost = postId => {\n    axios.post(\"http://localhost:5000/signatures\", {\n      PostId: postId\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.map(post => {\n        if (post.id === postId) {\n          if (response.data.signed) {\n            return { ...post,\n              Signatures: [...post.Signatures, 0]\n            };\n          } else {\n            const signatureArray = post.Signatures;\n            signatureArray.pop();\n            return { ...post,\n              Signatures: signatureArray\n            };\n          }\n        } else {\n          return post;\n        }\n      }));\n\n      if (signedPosts.includes(postId)) {\n        setSignedPosts(signedPosts.filter(id => {\n          return id != postId;\n        }));\n      } else {\n        setSignedPosts([...signedPosts, postId]);\n      }\n    });\n  };\n\n  const vistorClick = () => {\n    window.location.href = '/login';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaigns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"campaignTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Campaigns\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards__items_campaign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, listOfPosts.reverse().map((value, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"campaignCard\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardItem, {\n      key: key,\n      src: \"images/img-9.jpg\",\n      title: value.title,\n      text: value.postText.length > 80 ? ReactHtmlParser(value.postText.substring(0, 80).replace(/<p>|<\\/p>|<ul>|<\\/ul>|<ol>|<\\/ol>|<li>|<\\/li>|<br>|<\\/br>|<em>|<\\/em>/g, '') + \"...\") : ReactHtmlParser(value.postText.replace(/<p>|<\\/p>|<ul>|<\\/ul>|<ol>|<\\/ol>|<li>|<\\/li>|<br>|<\\/br>|<em>|<\\/em>/g, '')),\n      topic: value.topic,\n      username: value.username,\n      dateTime: moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\"),\n      path: `/post/${value.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, localStorage.getItem(\"accessToken\") ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, !signedPosts.includes(value.id) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 63\n      }\n    }, \"Sign\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSigned\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 30\n      }\n    }, \"Signed\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }\n    }, value.Signatures.length)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: vistorClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Sign\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, value.Signatures.length))));\n  }))))));\n}","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/Campaigns.js"],"names":["React","useEffect","useState","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","ReactPaginate","CardItem","moment","axios","Campaigns","listOfPosts","setListOfPosts","signedPosts","setSignedPosts","pageNum","setPageNum","postsPerPage","localStorage","getItem","get","then","response","data","map","sign","PostId","headers","accessToken","signAPost","postId","post","id","signed","Signatures","signatureArray","pop","includes","filter","vistorClick","window","location","href","reverse","value","key","title","postText","length","substring","replace","topic","username","createdAt","format"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport ReactPaginate from \"react-paginate\";\nimport '../../App.css';\nimport '../Cards.css';\nimport CardItem from '../CardItem';\nimport moment from \"moment\";\nimport axios from \"axios\";\n\n\nexport default function Campaigns() {\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [signedPosts, setSignedPosts] = useState([]);\n  const [pageNum, setPageNum] = useState(0);\n  const postsPerPage = 9;\n  \n\n  useEffect(() => {\n\n    if (!localStorage.getItem(\"accessToken\")) {\n      axios.get(\"http://localhost:5000/posts/visitors\").then((response) => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map((sign) => {\n          return sign.PostId;\n        }))\n      });\n    } else {\n      axios.get(\"http://localhost:5000/posts\", {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      }).then((response) => {\n        setListOfPosts(response.data.listOfPosts);\n        setSignedPosts(response.data.signedPosts.map((sign) => {\n          return sign.PostId;\n        }))\n      });\n    }\n  }, []);\n\n  const signAPost = (postId) => {\n    axios.post(\"http://localhost:5000/signatures\", {\n      PostId: postId\n    },\n      { headers: { accessToken: localStorage.getItem(\"accessToken\") } }\n    ).then((response) => {\n      setListOfPosts(listOfPosts.map((post) => {\n        if (post.id === postId) {\n          if (response.data.signed) {\n            return { ...post, Signatures: [...post.Signatures, 0] };\n          } else {\n            const signatureArray = post.Signatures;\n            signatureArray.pop();\n            return { ...post, Signatures: signatureArray };\n          }\n        } else {\n          return post;\n        }\n      })\n      );\n\n      if (signedPosts.includes(postId)) {\n        setSignedPosts(\n          signedPosts.filter((id) => {\n            return id != postId;\n          })\n        );\n      } else {\n        setSignedPosts([...signedPosts, postId]);\n      }\n    });\n  };\n\n  const vistorClick = () => {\n    window.location.href = '/login';\n  }\n\n  return (\n    <>\n      <div className='campaigns'>\n        <div className='overlay'>\n          <h1 className='campaignTitle'>Campaigns</h1>\n        </div>\n      </div>\n\n      <div className='cards'>\n        <div className='cards__container'>\n          <div className='cards__wrapper' >\n\n            <ul className='cards__items_campaign'>\n              {listOfPosts.reverse().map((value, key) => {\n                return (\n\n                  <div className='campaignCard' key={key}>\n                    <CardItem key={key}\n                      src='images/img-9.jpg'\n                      title={value.title}\n                      text={value.postText.length > 80 ?\n                        ReactHtmlParser(value.postText.substring(0, 80)\n                          .replace(/<p>|<\\/p>|<ul>|<\\/ul>|<ol>|<\\/ol>|<li>|<\\/li>|<br>|<\\/br>|<em>|<\\/em>/g, '') + \"...\") :\n                        ReactHtmlParser(value.postText\n                          .replace(/<p>|<\\/p>|<ul>|<\\/ul>|<ol>|<\\/ol>|<li>|<\\/li>|<br>|<\\/br>|<em>|<\\/em>/g, ''))}\n                      topic={value.topic}\n                      username={value.username}\n                      dateTime={moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\")}\n                      path={`/post/${value.id}`}\n                    />\n                    <div className='signContainer'>\n                      {localStorage.getItem(\"accessToken\") ? (\n                        <div>\n                          {!signedPosts.includes(value.id) ? (<button className='btnSign' onClick={() => {\n                            signAPost(value.id);\n                          }}>Sign</button>) :\n                            (<button className='btnSigned' onClick={() => {\n                              signAPost(value.id);\n                            }}>Signed</button>)}\n                          <label className='signNo'>{value.Signatures.length}</label>\n                        </div>\n                      ) :\n                        (\n                          <div>\n                            <button className='btnSign' onClick={vistorClick}>Sign</button>\n                            <label className='signNo'>{value.Signatures.length}</label>\n                          </div>\n                        )}\n                    </div>\n\n                  </div>\n\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}