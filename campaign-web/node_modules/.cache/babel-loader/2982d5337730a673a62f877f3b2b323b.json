{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n    authorname: '',\n    topic: '',\n    title: '',\n    content: stateToHTML(editorState.getCurrentContent()),\n    location: '',\n    startData: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); // Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = (e, data) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    document.getElementById(\"postForm\").reset();\n  };\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback(); // Axios.post('http://localhost:5000/register', {\n      //   signupName: values.username, email: values.email, password: values.password\n      // });\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    onEditorStateChange,\n    editorState,\n    values,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/accountBox/useForm3.js"],"names":["useState","useEffect","Editor","EditorState","stateToHTML","Axios","useForm","callback","validate","editorState","setEditorState","createEmpty","values","setValues","username","email","password","password2","authorname","topic","title","content","getCurrentContent","location","startData","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","data","preventDefault","document","getElementById","reset","onEditorStateChange","Object","keys","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACG,WAAW,CAACQ,WAAZ,EAAD,CAA9C;AAGA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC;AACnCc,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,SAAS,EAAE,EAJwB;AAKnCC,IAAAA,UAAU,EAAE,EALuB;AAMnCC,IAAAA,KAAK,EAAE,EAN4B;AAOnCC,IAAAA,KAAK,EAAE,EAP4B;AAQnCC,IAAAA,OAAO,EAAEjB,WAAW,CAACK,WAAW,CAACa,iBAAZ,EAAD,CARe;AASnCC,IAAAA,QAAQ,EAAE,EATyB;AAUnCC,IAAAA,SAAS,EAAE;AAVwB,GAAD,CAApC;AAaA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,KAAD,CAAhD,CAlBsC,CAmBtC;;AAEA,QAAM6B,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACApB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACmB,IAAD,GAAQC;AAFA,KAAD,CAAT;AAKD,GAPD;;AASA,QAAME,YAAY,GAAG,CAACJ,CAAD,EAAIK,IAAJ,KAAa;AAChCL,IAAAA,CAAC,CAACM,cAAF;AAGAV,IAAAA,SAAS,CAAClB,QAAQ,CAACI,MAAD,CAAT,CAAT;AACAgB,IAAAA,eAAe,CAAC,IAAD,CAAf;AAGAS,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC;AAED,GAVD;;AAYA,QAAMC,mBAAmB,GAAI/B,WAAD,IAAiB;AAC3CC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD,GAFD;;AAKAR,EAAAA,SAAS,CACP,MAAM;AACJ,QAAIwC,MAAM,CAACC,IAAP,CAAYjB,MAAZ,EAAoBkB,MAApB,KAA+B,CAA/B,IAAoChB,YAAxC,EAAsD;AACpDpB,MAAAA,QAAQ,GAD4C,CAGpD;AACA;AACA;AAED;AACF,GAVM,EAWP,CAACkB,MAAD,CAXO,CAAT;AAcA,SAAO;AAAEI,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8BM,IAAAA,mBAA9B;AAAmD/B,IAAAA,WAAnD;AAAgEG,IAAAA,MAAhE;AAAwEa,IAAAA;AAAxE,GAAP;AACD,CA9DD;;AAgEA,eAAenB,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  \n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n    authorname: '',\n    topic: '',\n    title: '',\n    content: stateToHTML(editorState.getCurrentContent()),\n    location: '',\n    startData: ''\n    \n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  // Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n\n  };\n\n  const handleSubmit = (e, data) => {\n    e.preventDefault();\n    \n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    \n    document.getElementById(\"postForm\").reset();\n\n  };\n\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState)\n  }\n\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n\n        // Axios.post('http://localhost:5000/register', {\n        //   signupName: values.username, email: values.email, password: values.password\n        // });\n\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, onEditorStateChange, editorState, values, errors };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}