{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\Post.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../../App.css';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { AuthContext } from '../../Context/AuthContext';\nexport default function Post() {\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:5000/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios.post(\"http://localhost:5000/comments\", {\n      commentText: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        const commentAdd = {\n          commentText: newComment,\n          username: response.data.username\n        };\n        setComments([...comments, commentAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n\n  const deleteComment = id => {\n    axios.post(`http://localhost:5000/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {}));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"campaigns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, postObject.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineOne\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, postObject.topic), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, postObject.location)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineTwo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"camTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, postObject.startDate), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nameAuthor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, postObject.username)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, postObject.postText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addComment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add your comment here...\",\n    autoComplete: \"off\",\n    value: newComment,\n    onChange: event => {\n      setNewComment(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    type: \"submit\",\n    onClick: addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listOfComments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, comments.map((comment, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"commentUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, \"User:\", comment.username), comment.commentText);\n  }))));\n}","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/Post.js"],"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","Post","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","authState","get","then","response","data","addComment","post","commentText","PostId","headers","accessToken","localStorage","getItem","error","alert","commentAdd","username","deleteComment","filter","val","title","topic","location","startDate","postText","event","target","value","map","comment","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport '../../App.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { AuthContext } from '../../Context/AuthContext';\r\n\r\nexport default function Post() {\r\n    let { id } = useParams();\r\n    const [postObject, setPostObject] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/posts/byId/${id}`).then((response) => {\r\n            setPostObject(response.data);\r\n        });\r\n\r\n        axios.get(`http://localhost:5000/comments/${id}`).then((response) => {\r\n            setComments(response.data);\r\n        });\r\n    }, []);\r\n    const addComment = () => {\r\n\r\n        axios.post(\"http://localhost:5000/comments\", { commentText: newComment, PostId: id },\r\n            {\r\n                headers: {\r\n                    accessToken: localStorage.getItem(\"accessToken\"),\r\n                },\r\n            }).then((response) => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    const commentAdd = {\r\n                        commentText: newComment,\r\n                        username: response.data.username\r\n                    };\r\n                    setComments([...comments, commentAdd]);\r\n                    setNewComment(\"\");\r\n                }\r\n\r\n            })\r\n    };\r\n\r\n    const deleteComment = (id) => {\r\n        axios.post(`http://localhost:5000/comments/${id}`,\r\n        {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\"),\r\n            },\r\n        }).then(() => {\r\n           \r\n            setComments(comments.filter((val) => {\r\n                    \r\n                }));\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className='campaigns'>{postObject.title}</h1>\r\n            <div className='lineOne'>\r\n                <div className='postTopic'>{postObject.topic}</div>\r\n                <div className='postLocation'>{postObject.location}</div>\r\n            </div>\r\n            <div className='lineTwo'>\r\n                <div className='camTime'>{postObject.startDate}</div>\r\n                <div className='nameAuthor'>{postObject.username}</div>\r\n            </div>\r\n            <div className='postText'>\r\n                <div className='textContent'>{postObject.postText}</div>\r\n            </div>\r\n            <div className=\"comments\">\r\n                <h1>Comments</h1>\r\n                <div className='addComment'>\r\n                    <input type='text' placeholder=\"Add your comment here...\" autoComplete=\"off\" value={newComment} onChange={(event) => { setNewComment(event.target.value) }} />\r\n                </div>\r\n                <button className='postButton' type='submit' onClick={addComment}>\r\n                    Comment\r\n                </button>\r\n                <div className='listOfComments'>\r\n                    {comments.map((comment, key) => {\r\n                        return (\r\n                            <div key={key} className='comment'>\r\n                                <label className='commentUser'>User:{comment.username}</label>\r\n                                {comment.commentText}\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}