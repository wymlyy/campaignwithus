{"ast":null,"code":"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/pages/Home';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Campaigns from './components/pages/Campaigns';\nimport Profile from './components/pages/Profile';\nimport SignUp from './components/pages/SignUp';\nimport Login from './components/pages/Login';\nimport Write from './components/pages/Write';\nimport Post from './components/pages/Post';\nimport sucessForm from './components/accountBox/FormSuccess';\nimport { AuthContext } from \"./Context/AuthContext\";\nimport './components/Navbar.css';\nimport { Button } from './components/Button';\nimport axios from 'axios';\n\nfunction App() {\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false\n  });\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n    axios.get(\"http://localhost:5000/auth/verification\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setAuthState({ ...authState,\n          status: false\n        });\n      } else {\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true\n        });\n      }\n    });\n  }, []);\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"accessToken\");\n    setAuthState({\n      username: \"\",\n      id: 0,\n      status: false\n    });\n    window.location.href = '/';\n  };\n\n  window.addEventListener('resize', showButton);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default App;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/App.js"],"names":["React","useState","useEffect","Home","BrowserRouter","Router","Switch","Route","Link","Campaigns","Profile","SignUp","Login","Write","Post","sucessForm","AuthContext","Button","axios","App","authState","setAuthState","username","id","status","click","setClick","button","setButton","handleClick","closeMobileMenu","showButton","window","innerWidth","get","headers","accessToken","localStorage","getItem","then","response","data","error","logout","e","preventDefault","removeItem","location","href","addEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/pages/Home';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Campaigns from './components/pages/Campaigns';\nimport Profile from './components/pages/Profile';\nimport SignUp from './components/pages/SignUp';\nimport Login from './components/pages/Login';\nimport Write from './components/pages/Write';\nimport Post from './components/pages/Post';\nimport sucessForm from './components/accountBox/FormSuccess';\nimport { AuthContext } from \"./Context/AuthContext\";\nimport './components/Navbar.css';\nimport { Button } from './components/Button';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: 0,\n    status: false,\n  });\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n\n    axios.get(\"http://localhost:5000/auth/verification\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      }\n    }).then((response) => {\n      if (response.data.error) {\n        setAuthState({ ...authState, status: false });\n      } else {\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true,\n        });  \n      }\n    });\n    \n  }, []);\n\n  const logout = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"accessToken\");\n    setAuthState({ username: \"\", id: 0, status: false });\n    window.location.href = '/';\n  };\n\n  window.addEventListener('resize', showButton);\n  return (\n    <>\n      {/* <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n          <nav className='navbar'>\n            <div className='navbar-container'>\n              <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n                Campaign <img className='img-logo' src=\"images/logo.png\" alt=\"\" width=\"70\" height=\"50\" /> with Us\n\n              </Link>\n              <div className='menu-icon' onClick={handleClick} >\n                <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n              </div>\n              <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li className='nav-item'>\n                  <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                    Home\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link\n                    to='/campaigns'\n                    className='nav-links'\n                    onClick={closeMobileMenu}\n                  >\n                    Campaigns\n                  </Link>\n                </li>\n\n                {authState.status ?\n                  (<li className='nav-item'>\n                    <Link\n                      to='/write'\n                      className='nav-links'\n                      onClick={closeMobileMenu}\n                    >Post</Link>\n                  </li>) : (<li className='nav-item'>\n                    <Link\n                      to='/login'\n                      className='nav-links'\n                      onClick={closeMobileMenu}\n                    >Post</Link>\n                  </li>)}\n\n                {authState.status &&\n                  <li className='nav-item'>\n                    <Link\n                      to='/my-profile'\n                      className='nav-links'\n                      onClick={closeMobileMenu}\n                    >\n                      My Profile\n                    </Link>\n                  </li>\n                }\n                {!authState.status ?\n                  (<li>\n                    <Link\n                      to='/login'\n                      className='nav-links-mobile'\n                      onClick={closeMobileMenu}\n                    >\n                      Login/Signup\n                    </Link>\n                  </li>) : (<li>\n                    <Link\n                      to='/'\n                      className='nav-links-mobile'\n                      onClick={logout}\n                    >\n                      Logout\n                    </Link>\n                  </li>)}\n              </ul>\n              {!authState.status ? (<div>{button && (<Button buttonStyle='btn--signup'>Login/Signup</Button>)}</div>) : (<div><span className='userNav'>{authState.username}</span>{button && (<Button onClick={logout} buttonStyle='btn--signup'>Logout</Button>)}</div>)}\n            </div>\n          </nav>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/campaigns' exact component={Campaigns} />\n            <Route path='/my-profile' component={Profile}>{authState ? <Profile /> : <Login />}</Route>\n            <Route path='/write' component={Write}>{authState ? <Write /> : <Login />}</Route>\n            <Route path='/post/:id' exact component={Post} />\n            <Route path='/sign-up' exact component={SignUp} />\n            <Route path='/login' exact component={Login} />\n            <Route path='/success-form' exact component={sucessForm} />\n          </Switch>\n        </Router>\n      </AuthContext.Provider> */}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}