{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm3 = (callback, validate) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const myCurrentDate = new Date();\n  const datePosted = myCurrentDate.getFullYear() + '-' + (myCurrentDate.getMonth() + 1) + '-' + myCurrentDate.getDate() + ' ' + myCurrentDate.getHours() + ':' + myCurrentDate.getMinutes() + ':' + myCurrentDate.getSeconds();\n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    title: '',\n    location: '',\n    editorState: EditorState.createEmpty()\n  });\n  const [setEditorState] = useState(EditorState.createEmpty());\n  const postTextTags = stateToHTML(values.editorState.getCurrentContent());\n  const postText = postTextTags.replace(/<[^>]+>/g, '');\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleTime = date => {\n    setStartDate(date);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true); // document.getElementById(\"postForm\").reset();\n  };\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      Axios.post('http://localhost:5000/posts', {\n        topic: values.topic,\n        startDate: startDate,\n        location: values.location,\n        username: values.username,\n        title: values.title,\n        postText: postText\n      }).then(response => {\n        console.log(\"it worked\");\n      }); // Axios.post('http://localhost:5000/register', {\n      //   signupName: values.username, email: values.email, password: values.password\n      // });\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    onEditorStateChange,\n    handleTime,\n    startDate,\n    editorState,\n    values,\n    errors\n  };\n};\n\nexport default useForm3;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/accountBox/useForm3.js"],"names":["useState","useEffect","EditorState","stateToHTML","Axios","useForm3","callback","validate","startDate","setStartDate","Date","myCurrentDate","datePosted","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","values","setValues","topic","username","title","location","editorState","createEmpty","setEditorState","postTextTags","getCurrentContent","postText","replace","errors","setErrors","isSubmitting","setIsSubmitting","defaults","withCredentials","handleChange","e","name","value","target","handleTime","date","handleSubmit","preventDefault","onEditorStateChange","Object","keys","length","post","then","response","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm3 = (callback, validate) => {\n \n  const [startDate, setStartDate] = useState(new Date());\n  \n  const myCurrentDate = new Date();\n  const datePosted = myCurrentDate.getFullYear() + '-' + (myCurrentDate.getMonth() + 1) + '-' + myCurrentDate.getDate() + ' ' + myCurrentDate.getHours() + ':' + myCurrentDate.getMinutes() + ':' + myCurrentDate.getSeconds();\n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    title: '',\n    location: '',\n    editorState:EditorState.createEmpty()\n\n  });\n  const [setEditorState] = useState(EditorState.createEmpty());\n  const postTextTags = stateToHTML(values.editorState.getCurrentContent());\n  const postText = postTextTags.replace(/<[^>]+>/g, '');\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n\n  };\n\n  const handleTime = (date) => {\n    setStartDate(date);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    \n    setIsSubmitting(true);\n\n\n\n    // document.getElementById(\"postForm\").reset();\n\n  };\n\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState);\n    \n  }\n\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n\n        Axios.post('http://localhost:5000/posts', { topic: values.topic, startDate: startDate, location: values.location, username: values.username, title: values.title, postText: postText }).then((response) => {\n          console.log(\"it worked\");\n        });\n\n\n\n\n        // Axios.post('http://localhost:5000/register', {\n        //   signupName: values.username, email: values.email, password: values.password\n        // });\n\n\n\n      }\n\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, onEditorStateChange, handleTime, startDate, editorState, values, errors };\n};\n\nexport default useForm3;\n"]},"metadata":{},"sourceType":"module"}