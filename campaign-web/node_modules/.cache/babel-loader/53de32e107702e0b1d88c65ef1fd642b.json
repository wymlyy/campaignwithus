{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm3 = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date());\n  const postTextTags = stateToHTML(editorState.getCurrentContent());\n  const postText = postTextTags.replace(/<[^>]+>/g, '');\n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    title: '',\n    location: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleTime = date => {\n    setStartDate(date);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values, postText));\n    setIsSubmitting(true);\n  };\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      Axios.post('http://localhost:5000/posts', {\n        topic: values.topic,\n        startDate: startDate,\n        location: values.location,\n        username: values.username,\n        title: values.title,\n        postText: postText\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        window.location.href = '/write';\n      });\n      Axios.post('http://localhost:5000/posts/visitors', {\n        topic: values.topic,\n        startDate: startDate,\n        location: values.location,\n        username: values.username,\n        title: values.title,\n        postText: postText\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        window.location.href = '/write';\n      });\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    onEditorStateChange,\n    handleTime,\n    startDate,\n    editorState,\n    values,\n    errors\n  };\n};\n\nexport default useForm3;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/accountBox/useForm3.js"],"names":["useState","useEffect","EditorState","stateToHTML","Axios","useForm3","callback","validate","editorState","setEditorState","createEmpty","startDate","setStartDate","Date","postTextTags","getCurrentContent","postText","replace","values","setValues","topic","username","title","location","errors","setErrors","isSubmitting","setIsSubmitting","defaults","withCredentials","handleChange","e","name","value","target","handleTime","date","handleSubmit","preventDefault","onEditorStateChange","Object","keys","length","post","headers","accessToken","localStorage","getItem","then","response","window","href"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\n\nimport Axios from 'axios';\n\nconst useForm3 = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date());\n  const postTextTags = stateToHTML(editorState.getCurrentContent());\n  const postText = postTextTags.replace(/<[^>]+>/g, '');\n\n  \n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    title: '',\n    location: ''\n\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n\n  };\n\n  const handleTime = (date) => {\n    setStartDate(date);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values,postText));\n    setIsSubmitting(true);\n  };\n\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState);\n\n  }\n\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n\n        Axios.post('http://localhost:5000/posts', { topic: values.topic, startDate: startDate, location: values.location, username: values.username, title: values.title, postText: postText },{\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\n        }).then((response) => {\n          window.location.href = '/write';\n        });\n\n        Axios.post('http://localhost:5000/posts/visitors', { topic: values.topic, startDate: startDate, location: values.location, username: values.username, title: values.title, postText: postText },{\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\n        }).then((response) => {\n          window.location.href = '/write';\n        });\n        \n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, onEditorStateChange, handleTime, startDate, editorState, values, errors };\n};\n\nexport default useForm3;\n"]},"metadata":{},"sourceType":"module"}