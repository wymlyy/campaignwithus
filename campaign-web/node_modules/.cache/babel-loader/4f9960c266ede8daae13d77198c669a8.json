{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date());\n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n    title: '',\n    postText: stateToHTML(editorState.getCurrentContent()),\n    location: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleTime = date => {\n    setStartDate(date);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(data);\n    Axios.post('http://localhost:5000/posts', {}).then(response => {\n      console.log(\"it worked\");\n    }); // document.getElementById(\"postForm\").reset();\n  };\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback(); // Axios.post('http://localhost:5000/register', {\n      //   signupName: values.username, email: values.email, password: values.password\n      // });\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    onEditorStateChange,\n    handleTime,\n    startDate,\n    editorState,\n    values,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/accountBox/useForm3.js"],"names":["useState","useEffect","Editor","EditorState","stateToHTML","Axios","useForm","callback","validate","editorState","setEditorState","createEmpty","startDate","setStartDate","Date","values","setValues","topic","username","email","password","password2","title","postText","getCurrentContent","location","errors","setErrors","isSubmitting","setIsSubmitting","defaults","withCredentials","handleChange","e","name","value","target","handleTime","date","handleSubmit","preventDefault","console","log","data","post","then","response","onEditorStateChange","Object","keys","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACG,WAAW,CAACQ,WAAZ,EAAD,CAA9C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAIc,IAAJ,EAAD,CAA1C;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC;AACnCiB,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,QAAQ,EAAE,EAJyB;AAKnCC,IAAAA,SAAS,EAAE,EALwB;AAMnCC,IAAAA,KAAK,EAAE,EAN4B;AAOnCC,IAAAA,QAAQ,EAAEnB,WAAW,CAACK,WAAW,CAACe,iBAAZ,EAAD,CAPc;AAQnCC,IAAAA,QAAQ,EAAE;AARyB,GAAD,CAApC;AAWA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,KAAD,CAAhD;AACAK,EAAAA,KAAK,CAACyB,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACApB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACmB,IAAD,GAAQC;AAFA,KAAD,CAAT;AAKD,GAPD;;AASA,QAAME,UAAU,GAAIC,IAAD,IAAU;AAC3BzB,IAAAA,YAAY,CAACyB,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGN,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACO,cAAF;AAGAb,IAAAA,SAAS,CAACnB,QAAQ,CAACO,MAAD,CAAT,CAAT;AACAc,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAECtC,IAAAA,KAAK,CAACuC,IAAN,CAAW,6BAAX,EAA0C,EAA1C,EAA8CC,IAA9C,CAAoDC,QAAD,IAAc;AAC/DL,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KAFD,EARuB,CAWxB;AAED,GAbD;;AAeA,QAAMK,mBAAmB,GAAItC,WAAD,IAAiB;AAC3CC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD,GAFD;;AAKAR,EAAAA,SAAS,CACP,MAAM;AACJ,QAAI+C,MAAM,CAACC,IAAP,CAAYvB,MAAZ,EAAoBwB,MAApB,KAA+B,CAA/B,IAAoCtB,YAAxC,EAAsD;AACpDrB,MAAAA,QAAQ,GAD4C,CAGpD;AACA;AACA;AAED;AACF,GAVM,EAWP,CAACmB,MAAD,CAXO,CAAT;AAcA,SAAO;AAAEM,IAAAA,YAAF;AAAgBO,IAAAA,YAAhB;AAA8BQ,IAAAA,mBAA9B;AAAmDV,IAAAA,UAAnD;AAA+DzB,IAAAA,SAA/D;AAA0EH,IAAAA,WAA1E;AAAuFM,IAAAA,MAAvF;AAA+FW,IAAAA;AAA/F,GAAP;AACD,CAnED;;AAqEA,eAAepB,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date());\n\n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n    title: '',\n    postText: stateToHTML(editorState.getCurrentContent()),\n    location: ''\n\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n    \n  };\n\n  const handleTime = (date) => {\n    setStartDate(date);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(data);\n\n     Axios.post('http://localhost:5000/posts', {}).then((response) => {\n       console.log(\"it worked\");\n     });\n    // document.getElementById(\"postForm\").reset();\n\n  };\n\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState)\n  }\n\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n\n        // Axios.post('http://localhost:5000/register', {\n        //   signupName: values.username, email: values.email, password: values.password\n        // });\n\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, onEditorStateChange, handleTime, startDate, editorState, values, errors };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}