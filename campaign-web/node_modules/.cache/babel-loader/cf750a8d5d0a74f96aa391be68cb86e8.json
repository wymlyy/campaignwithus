{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport Axios from 'axios';\n\nconst useForm3 = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date()); // const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\n  //   const postText = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n\n  const postText = stateToHTML(editorState.getCurrentContent()); // const postText = postTextTags.replace(/<[^>]+>/g, '');\n\n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    title: '',\n    location: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [file, setFile] = useState('');\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleFile = async e => {\n    const uploadFile = e.target.files[0];\n    const base64 = await convertBase64(uploadFile).link;\n    setFile(base64);\n    console.log(base64);\n  };\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      if (file) {\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          resolve({\n            data: {\n              link: e.target.result\n            }\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  const handleTime = date => {\n    setStartDate(date);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values, postText));\n    setIsSubmitting(true);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault();\n    setErrors(validate(values, postText));\n    setIsSaving(true);\n  };\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      Axios.post('http://localhost:5000/posts', {\n        topic: values.topic,\n        startDate: startDate,\n        location: values.location,\n        username: values.username,\n        title: values.title,\n        postText: postText,\n        cover: file\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        window.location.href = '/write';\n      });\n      Axios.post('http://localhost:5000/posts/visitors', {\n        topic: values.topic,\n        startDate: startDate,\n        location: values.location,\n        username: values.username,\n        title: values.title,\n        postText: postText,\n        cover: file\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        window.location.href = '/write';\n      });\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    saveEdit,\n    onEditorStateChange,\n    handleTime,\n    handleFile,\n    startDate,\n    editorState,\n    values,\n    errors\n  };\n};\n\nexport default useForm3;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/accountBox/useForm3.js"],"names":["useState","useEffect","EditorState","convertToRaw","stateToHTML","Axios","useForm3","callback","validate","editorState","setEditorState","createEmpty","startDate","setStartDate","Date","postText","getCurrentContent","values","setValues","topic","username","title","location","errors","setErrors","isSubmitting","setIsSubmitting","isSaving","setIsSaving","file","setFile","defaults","withCredentials","handleChange","e","name","value","target","handleFile","uploadFile","files","base64","convertBase64","link","console","log","Promise","resolve","reject","reader","FileReader","onload","data","result","readAsDataURL","handleTime","date","handleSubmit","preventDefault","saveEdit","onEditorStateChange","Object","keys","length","post","cover","headers","accessToken","localStorage","getItem","then","response","window","href"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { EditorState,convertToRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\n\nimport Axios from 'axios';\n\nconst useForm3 = (callback, validate) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date());\n  // const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\n  //   const postText = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n  const postText = stateToHTML(editorState.getCurrentContent());\n  // const postText = postTextTags.replace(/<[^>]+>/g, '');\n\n\n  const [values, setValues] = useState({\n    topic: '',\n    username: '',\n    title: '',\n    location: ''\n\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [file, setFile] = useState('');\n\n\n  Axios.defaults.withCredentials = true;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n\n  };\n\n  const handleFile = async (e) => {\n    const uploadFile = e.target.files[0];\n    const base64 = await convertBase64(uploadFile).link;\n    setFile(base64);\n    console.log(base64);\n  }\n\n  const convertBase64 = (file) => {\n    return new Promise(\n      (resolve, reject) => {\n        if (file) {\n          let reader = new FileReader();\n          reader.onload = (e) => {\n            resolve({ data: { link: e.target.result } })\n          };\n          reader.readAsDataURL(file);\n        }\n      }\n    );\n  }\n\n\n  const handleTime = (date) => {\n    setStartDate(date);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values, postText));\n    setIsSubmitting(true);\n\n  };\n\n  const saveEdit = e => {\n    e.preventDefault();\n    setErrors(validate(values, postText));\n    setIsSaving(true);\n\n  };\n\n\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState);\n\n  }\n\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n\n        Axios.post('http://localhost:5000/posts', { topic: values.topic, startDate: startDate, location: values.location, username: values.username, title: values.title, postText: postText, cover: file }, {\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\n        }).then((response) => {\n          window.location.href = '/write';\n        });\n\n        Axios.post('http://localhost:5000/posts/visitors', { topic: values.topic, startDate: startDate, location: values.location, username: values.username, title: values.title, postText: postText, cover:file }, {\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\n        }).then((response) => {\n          window.location.href = '/write';\n        });\n\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, saveEdit, onEditorStateChange, handleTime, handleFile, startDate, editorState, values, errors };\n};\n\nexport default useForm3;"]},"metadata":{},"sourceType":"module"}