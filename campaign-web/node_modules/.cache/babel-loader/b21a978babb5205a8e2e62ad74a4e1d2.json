{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\EditPost.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, contentState, convertFromRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport DatePicker from \"react-datepicker\";\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./textEditor.css\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport validate from \"../accountBox/validateInfoPost\";\nimport useForm3 from \"../accountBox/useForm3\";\n\nconst EditPost = submitForm => {\n  const {\n    errors\n  } = useForm3(submitForm, validate);\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [values, setValues] = useState({\n    topic: postObject.topic,\n    username: postObject.username,\n    title: postObject.title,\n    location: postObject.location\n  });\n  const [topic, setTopic] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date());\n  const [postText, setPostText] = useState(\"\"); // const postText = stateToHTML(editorState.getCurrentContent());\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/posts/byId/${id}`).then(response => {\n      setTopic(response.data.topic);\n      setUsername(response.data.username);\n      setTitle(response.data.title);\n      setLocation(response.data.location);\n      setPostText(response.data.postText);\n      setEditorState(EditorState.createWithContent(convertFromRaw().getCurrentContent()));\n      setPostObject(response.data);\n    });\n  }, []);\n\n  const handleTime = date => {\n    setStartDate(date);\n  };\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  const editPost = () => {\n    if (Object.keys(errors).length === 0) {\n      axios.put(`http://localhost:5000/posts/byId/${id}`, {\n        topic: topic,\n        startDate: startDate,\n        location: location,\n        username: username,\n        title: title,\n        postText: postText\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        window.location.href = `/post/${id}`;\n      });\n    }\n  };\n\n  const uploadCallback = file => {\n    return new Promise((resolve, reject) => {\n      if (file) {\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          resolve({\n            data: {\n              link: e.target.result\n            }\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"postForm\",\n    onSubmit: editPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"postPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Create Your Own Campaign !\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Select One Topic:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"topicSelection\",\n    className: \"topic\",\n    name: \"topic\",\n    value: topic,\n    onChange: e => {\n      setTopic(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"none\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Select a topic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Marketing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Marketing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"education\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"society\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Society\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Other\")), errors.topic && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 30\n    }\n  }, errors.topic)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Select Date and Time:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepick\",\n    dateFormat: \"yyyy-MM-dd HH:mm\",\n    timeFormat: \"hh:mm\",\n    selected: startDate,\n    name: \"startDate\",\n    value: moment(startDate).format(\"DD-MM-YYYY HH:mm\"),\n    onChange: handleTime,\n    showTimeSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), errors.startDate && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 34\n    }\n  }, errors.startDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"otherInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaignLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"locationInput\",\n    type: \"text\",\n    name: \"location\",\n    value: location,\n    onChange: e => {\n      setLocation(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), errors.location && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, errors.location)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authorName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Author:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"author\",\n    name: \"username\",\n    value: username,\n    onChange: e => {\n      setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, errors.username))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"titleInput\",\n    name: \"title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 28\n    }\n  }, errors.title)), /*#__PURE__*/React.createElement(Editor, {\n    name: \"postText\",\n    value: ReactHtmlParser(postText),\n    editorState: editorState,\n    toolbarClassName: \"toolbarClassName\",\n    wrapperClassName: \"wrapperClassName\",\n    editorClassName: \"editorClassName\",\n    onEditorStateChange: onEditorStateChange,\n    toolbar: {\n      inline: {\n        inDropdown: true\n      },\n      list: {\n        inDropdown: true\n      },\n      textAlign: {\n        inDropdown: true\n      },\n      link: {\n        inDropdown: true\n      },\n      history: {\n        inDropdown: true\n      },\n      image: {\n        uploadEnabled: true,\n        uploadCallback: uploadCallback,\n        previewImage: true,\n        inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n        alt: {\n          present: false,\n          mandatory: false\n        },\n        defaultSize: {\n          height: 'auto',\n          width: 'auto'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), errors.postText && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, errors.postText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"Update\"))));\n};\n\nexport default EditPost;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/EditPost.jsx"],"names":["React","useState","useEffect","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Editor","EditorState","convertToRaw","contentState","convertFromRaw","stateToHTML","DatePicker","useParams","axios","moment","validate","useForm3","EditPost","submitForm","errors","id","postObject","setPostObject","values","setValues","topic","username","title","location","setTopic","setUsername","setTitle","setLocation","editorState","setEditorState","createEmpty","startDate","setStartDate","Date","postText","setPostText","get","then","response","data","createWithContent","getCurrentContent","handleTime","date","onEditorStateChange","editPost","Object","keys","length","put","headers","accessToken","localStorage","getItem","window","href","uploadCallback","file","Promise","resolve","reject","reader","FileReader","onload","e","link","target","result","readAsDataURL","value","format","inline","inDropdown","list","textAlign","history","image","uploadEnabled","previewImage","inputAccept","alt","present","mandatory","defaultSize","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState,convertToRaw, contentState, convertFromRaw } from \"draft-js\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./textEditor.css\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport validate from \"../accountBox/validateInfoPost\";\r\nimport useForm3 from \"../accountBox/useForm3\";\r\n\r\n\r\n\r\nconst EditPost = (submitForm) => {\r\n  const { errors } = useForm3(\r\n    submitForm,\r\n    validate\r\n  );\r\n  let { id } = useParams();\r\n  const [postObject, setPostObject] = useState({});\r\n  const [values, setValues] = useState({\r\n    topic: postObject.topic,\r\n    username: postObject.username,\r\n    title: postObject.title,\r\n    location: postObject.location\r\n\r\n  });\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [postText, setPostText] = useState(\"\");\r\n  // const postText = stateToHTML(editorState.getCurrentContent());\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/posts/byId/${id}`).then((response) => {\r\n      setTopic(response.data.topic);\r\n      setUsername(response.data.username);\r\n      setTitle(response.data.title);\r\n      setLocation(response.data.location);\r\n      setPostText(response.data.postText);\r\n      setEditorState(EditorState.createWithContent(convertFromRaw().getCurrentContent()));\r\n      setPostObject(response.data);\r\n    });\r\n\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const handleTime = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState);\r\n\r\n  };\r\n\r\n  const editPost = () => {\r\n    if (Object.keys(errors).length === 0) {\r\n      axios.put(`http://localhost:5000/posts/byId/${id}`, { topic: topic, startDate: startDate, location: location, username: username, title: title, postText: postText }, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      }).then((response) => {\r\n        window.location.href = `/post/${id}`;\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  const uploadCallback = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        if (file) {\r\n          let reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            resolve({ data: { link: e.target.result } })\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form id='postForm' onSubmit={editPost}>\r\n        <h1 className='postPageTitle'>Create Your Own Campaign !</h1>\r\n        <div className='selectInfo'>\r\n          <div className='selectTopic'>\r\n            <label>Select One Topic:</label>\r\n\r\n            <select id='topicSelection' className='topic' name='topic' value={topic} onChange={(e) => {\r\n              setTopic(e.target.value)\r\n            }}>\r\n              <option value='none' hidden>Select a topic</option>\r\n              <option value='sports'>Sports</option>\r\n              <option value='Marketing'>Marketing</option>\r\n              <option value='education'>Education</option>\r\n              <option value='society'>Society</option>\r\n              <option value='other'>Other</option>\r\n            </select>\r\n            {errors.topic && <p className='errors'>{errors.topic}</p>}\r\n          </div>\r\n          <div className='selectTime'>\r\n            <label>Select Date and Time:</label>\r\n\r\n            <DatePicker className='datepick'\r\n              dateFormat=\"yyyy-MM-dd HH:mm\"\r\n              timeFormat=\"hh:mm\"\r\n              selected={startDate}\r\n              name='startDate'\r\n              value={moment(startDate).format(\"DD-MM-YYYY HH:mm\")}\r\n              onChange={handleTime}\r\n              showTimeSelect\r\n            />\r\n            {errors.startDate && <p className='errors'>{errors.startDate}</p>}\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"otherInfo\">\r\n          <div className=\"campaignLocation\">\r\n            <label>Location:</label>\r\n\r\n            <input className='locationInput' type=\"text\" name='location' value={location} onChange={(e) => {\r\n              setLocation(e.target.value)\r\n            }} />\r\n            {errors.location && <p className='errors'>{errors.location}</p>}\r\n          </div>\r\n          <div className=\"authorName\">\r\n            <label>Author:</label>\r\n\r\n            <input type=\"text\" className=\"author\" name='username' value={username} onChange={(e) => {\r\n              setUsername(e.target.value)\r\n            }} />\r\n            {errors.username && <p className='errors'>{errors.username}</p>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"postTitle\">\r\n          <label>Title:</label>\r\n\r\n          <input type=\"text\" className=\"titleInput\" name='title' value={title} onChange={(e) => setTitle(e.target.value)} />\r\n          {errors.title && <p className='errors'>{errors.title}</p>}\r\n        </div>\r\n\r\n        <Editor\r\n          name='postText'\r\n          value={ReactHtmlParser(postText)}\r\n          editorState={editorState}\r\n          toolbarClassName=\"toolbarClassName\"\r\n          wrapperClassName=\"wrapperClassName\"\r\n          editorClassName=\"editorClassName\"\r\n          onEditorStateChange={onEditorStateChange}\r\n          toolbar={{\r\n            inline: { inDropdown: true },\r\n            list: { inDropdown: true },\r\n            textAlign: { inDropdown: true },\r\n            link: { inDropdown: true },\r\n            history: { inDropdown: true },\r\n            image: {\r\n              uploadEnabled: true,\r\n              uploadCallback: uploadCallback,\r\n              previewImage: true,\r\n              inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n              alt: { present: false, mandatory: false },\r\n              defaultSize: {\r\n                height: 'auto',\r\n                width: 'auto',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        {errors.postText && <p className='errors-content'>{errors.postText}</p>}\r\n        <div className='postBtnContainer'>\r\n          <button className='postButton' type='submit'>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}