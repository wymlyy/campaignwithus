{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\TextEditor.jsx\";\nimport React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./textEditor.css\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport Axios from 'axios';\n\nconst TextEditor = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  const content = stateToHTML(editorState.getCurrentContent()); // const contentToSave = JSON.stringify(convertToRaw(content));\n\n  const [location, setLocation] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const myCurrentDate = new Date();\n  const datePosted = myCurrentDate.getFullYear() + '-' + (myCurrentDate.getMonth() + 1) + '-' + myCurrentDate.getDate() + ' ' + myCurrentDate.getHours() + ':' + myCurrentDate.getMinutes() + ':' + myCurrentDate.getSeconds();\n\n  const submitPost = onSubmitProps => {\n    Axios.post('http://localhost:5000/api/create', {\n      userName: userName,\n      topic: topic,\n      title: title,\n      content: content,\n      location: location,\n      startDate: startDate,\n      datePosted: datePosted\n    });\n    onSubmitProps.setSubmitting(false);\n    onSubmitProps.resetForm();\n  };\n\n  const uploadCallback = file => {\n    return new Promise((resolve, reject) => {\n      if (file) {\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          resolve({\n            data: {\n              link: e.target.result\n            }\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"postPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Create Your Own Campaign !\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Select One Topic:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"topic\",\n    onChange: e => {\n      setTopic(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"none\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Select a topic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Marketing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Marketing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"education\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"society\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Society\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Select Date and Time:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepick\",\n    dateFormat: \"yyyy-MM-dd HH:mm\",\n    timeFormat: \"hh:mm\",\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    showTimeSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"otherInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaignLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"locationInput\",\n    type: \"text\",\n    onChange: e => {\n      setLocation(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authorName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Author Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"author\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"titleInput\",\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Editor, {\n    editorState: editorState,\n    toolbarClassName: \"toolbarClassName\",\n    wrapperClassName: \"wrapperClassName\",\n    editorClassName: \"editorClassName\",\n    onEditorStateChange: onEditorStateChange,\n    toolbar: {\n      inline: {\n        inDropdown: true\n      },\n      list: {\n        inDropdown: true\n      },\n      textAlign: {\n        inDropdown: true\n      },\n      link: {\n        inDropdown: true\n      },\n      history: {\n        inDropdown: true\n      },\n      image: {\n        uploadEnabled: true,\n        uploadCallback: uploadCallback,\n        previewImage: true,\n        inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n        alt: {\n          present: false,\n          mandatory: false\n        },\n        defaultSize: {\n          height: 'auto',\n          width: 'auto'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    type: \"reset\",\n    onClick: submitPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Post\"));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/TextEditor.jsx"],"names":["React","useState","Editor","EditorState","convertToRaw","stateToHTML","DatePicker","Axios","TextEditor","userName","setUserName","topic","setTopic","title","setTitle","editorState","setEditorState","createEmpty","onEditorStateChange","content","getCurrentContent","location","setLocation","startDate","setStartDate","Date","myCurrentDate","datePosted","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","submitPost","onSubmitProps","post","setSubmitting","resetForm","uploadCallback","file","Promise","resolve","reject","reader","FileReader","onload","e","data","link","target","result","readAsDataURL","value","date","inline","inDropdown","list","textAlign","history","image","uploadEnabled","previewImage","inputAccept","alt","present","mandatory","defaultSize","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./textEditor.css\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport Axios from 'axios';\r\n\r\n\r\nconst TextEditor = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState)\r\n  }\r\n  const content = stateToHTML(editorState.getCurrentContent());\r\n  // const contentToSave = JSON.stringify(convertToRaw(content));\r\n\r\n  const [location, setLocation] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const myCurrentDate = new Date();\r\n  const datePosted = myCurrentDate.getFullYear() + '-' + (myCurrentDate.getMonth() + 1) + '-' + myCurrentDate.getDate() + ' ' + myCurrentDate.getHours() + ':' + myCurrentDate.getMinutes() + ':' + myCurrentDate.getSeconds();\r\n\r\n  const submitPost = (onSubmitProps) => {\r\n    Axios.post('http://localhost:5000/api/create', {\r\n      userName: userName, topic: topic, title: title, content: content, location: location, startDate: startDate, datePosted: datePosted\r\n    })\r\n    onSubmitProps.setSubmitting(false)\r\n    onSubmitProps.resetForm()\r\n  }\r\n\r\n  const uploadCallback = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        if (file) {\r\n          let reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            resolve({ data: { link: e.target.result } })\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='postPageTitle'>Create Your Own Campaign !</h1>\r\n      <div className='selectInfo'>\r\n        <div className='selectTopic'>\r\n          <label>Select One Topic:</label>\r\n          <select className='topic' onChange={(e) => { setTopic(e.target.value) }}>\r\n            <option value='none' hidden>Select a topic</option>\r\n            <option value='sports'>Sports</option>\r\n            <option value='Marketing'>Marketing</option>\r\n            <option value='education'>Education</option>\r\n            <option value='society'>Society</option>\r\n          </select>\r\n        </div>\r\n        <div className='selectTime'>\r\n          <label>Select Date and Time:</label>\r\n          <DatePicker className='datepick'\r\n            dateFormat=\"yyyy-MM-dd HH:mm\"\r\n            timeFormat=\"hh:mm\"\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)} showTimeSelect\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"otherInfo\">\r\n        <div className=\"campaignLocation\">\r\n          <label>Location:</label>\r\n          <input className='locationInput' type=\"text\" onChange={(e) => { setLocation(e.target.value) }} />\r\n        </div>\r\n        <div className=\"authorName\">\r\n          <label>Author Name:</label>\r\n          <input type=\"text\" className=\"author\" onChange={(e) => { setUserName(e.target.value) }} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"postTitle\">\r\n        <label>Title:</label>\r\n        <input type=\"text\" className=\"titleInput\" onChange={(e) => { setTitle(e.target.value) }} />\r\n      </div>\r\n      <Editor\r\n        editorState={editorState}\r\n        toolbarClassName=\"toolbarClassName\"\r\n        wrapperClassName=\"wrapperClassName\"\r\n        editorClassName=\"editorClassName\"\r\n        onEditorStateChange={onEditorStateChange}\r\n        toolbar={{\r\n          inline: { inDropdown: true },\r\n          list: { inDropdown: true },\r\n          textAlign: { inDropdown: true },\r\n          link: { inDropdown: true },\r\n          history: { inDropdown: true },\r\n          image: {\r\n            uploadEnabled: true,\r\n            uploadCallback: uploadCallback,\r\n            previewImage: true,\r\n            inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n            alt: { present: false, mandatory: false },\r\n            defaultSize: {\r\n              height: 'auto',\r\n              width: 'auto',\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      <button className='postButton' type='reset' onClick={submitPost}>\r\n        Post\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default TextEditor;"]},"metadata":{},"sourceType":"module"}