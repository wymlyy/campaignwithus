{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\Post.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../../App.css';\nimport './post.css';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { AuthContext } from '../../Context/AuthContext';\nimport Footer from '../Footer';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport validate from \"../accountBox/validateInfoPost\";\nimport useForm3 from \"../accountBox/useForm3\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport moment from 'moment';\nexport default function Post(submitForm) {\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [title, setTitle] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [dateStart, setDateStart] = useState(moment(postObject.startDate).format(\"DD-MM-YYYY HH:mm\"));\n  const [updateMode, setUpdateMode] = useState(false);\n  const {\n    onEditorStateChange,\n    handleTime,\n    editorState,\n    errors\n  } = useForm3(submitForm, validate);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:5000/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios.post(\"http://localhost:5000/comments/\", {\n      commentText: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        const commentAdd = {\n          commentText: newComment,\n          username: response.data.username\n        };\n        setComments([...comments, commentAdd]);\n        setNewComment(\"\");\n        window.location.href = `/post/${id}`;\n      }\n    });\n  };\n\n  const deleteComment = commentId => {\n    axios.delete(`http://localhost:5000/comments/${commentId}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {\n        return val.id != commentId;\n      }));\n    });\n  };\n\n  const deletePost = id => {\n    axios.delete(`http://localhost:5000/posts/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      window.location.href = '/';\n    });\n  };\n\n  const editPost = () => {\n    setUpdateMode(true);\n  };\n\n  const saveUpdate = async id => {\n    try {\n      await axios.put(`http://localhost:5000/posts/${id}`, {\n        title,\n        topic,\n        location,\n        author,\n        dateStart,\n        postText\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  const vistorClick = () => {\n    window.location.href = '/login';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaigns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, updateMode ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: postObject.title,\n    className: \"inputPosttitle\",\n    autoFocus: true,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"posttitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 35\n    }\n  }, postObject.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineOne\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, \"Topic: \", updateMode ? /*#__PURE__*/React.createElement(\"select\", {\n    id: \"inpuTopicSelection\",\n    className: \"inputTopic\",\n    name: \"topic\",\n    value: postObject.topic,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"none\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }, \"Select a topic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Marketing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, \"Marketing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"education\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"society\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, \"Society\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, \"Other\")) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }\n  }, postObject.topic)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, \"Location: \", updateMode ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: postObject.location,\n    className: \"inputPostLocation\",\n    autoFocus: true,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 43\n    }\n  }, postObject.location))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineTwo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postAuthor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, \"Author: \", postObject.username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, \"Start Time: \", updateMode ? /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepick\",\n    dateFormat: \"yyyy-MM-dd HH:mm\",\n    timeFormat: \"hh:mm\",\n    selected: dateStart,\n    name: \"startDate\",\n    value: dateStart,\n    onChange: handleTime,\n    showTimeSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 41\n    }\n  }, dateStart)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postComment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"deletePost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, authState.username === postObject.username && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"deletePostBtn\",\n    onClick: editPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"deletePost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, authState.username === postObject.username && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"deletePostBtn\",\n    onClick: () => {\n      deletePost(postObject.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, \"Delete Post\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, ReactHtmlParser(postObject.postText))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"commentTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \" Make your comment here\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addComment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Add your comment here...\",\n    autoComplete: \"off\",\n    value: newComment,\n    onChange: event => {\n      setNewComment(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, localStorage.getItem(\"accessToken\") ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"commentBtn\",\n    type: \"submit\",\n    onClick: addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 68\n    }\n  }, \"Comment\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"commentBtn\",\n    type: \"submit\",\n    onClick: vistorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, \"Comment\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listOfComments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, comments.map((comment, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"commentUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, \"User: \", comment.username, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dateposted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 96\n      }\n    }, moment(comment.createdAt).format(\"DD-MM-YYYY HH:mm:ss\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"textOfComment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    }, comment.commentText), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentBtnContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 45\n      }\n    }, authState.username === comment.username && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DeleteIcon, {\n      onClick: () => {\n        deleteComment(comment.id);\n      },\n      className: \"deleteIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 117\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltipText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 73\n      }\n    }, \"Delete\")))));\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/Post.js"],"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","Footer","DeleteIcon","Editor","DatePicker","validate","useForm3","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","moment","Post","submitForm","id","postObject","setPostObject","title","setTitle","topic","setTopic","location","setLocation","author","setAuthor","postText","setPostText","comments","setComments","newComment","setNewComment","authState","dateStart","setDateStart","startDate","format","updateMode","setUpdateMode","onEditorStateChange","handleTime","editorState","errors","get","then","response","data","addComment","post","commentText","PostId","headers","accessToken","localStorage","getItem","error","alert","commentAdd","username","window","href","deleteComment","commentId","delete","filter","val","deletePost","editPost","saveUpdate","put","err","vistorClick","e","target","value","event","map","comment","key","createdAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport '../../App.css';\r\nimport './post.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport Footer from '../Footer';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport validate from \"../accountBox/validateInfoPost\";\r\nimport useForm3 from \"../accountBox/useForm3\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport moment from 'moment';\r\n\r\nexport default function Post(submitForm) {\r\n    let { id } = useParams();\r\n    const [postObject, setPostObject] = useState({});\r\n    const [title, setTitle] = useState(\"\");\r\n    const [topic, setTopic] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [postText, setPostText] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const { authState } = useContext(AuthContext);\r\n    const [dateStart, setDateStart] = useState(moment(postObject.startDate).format(\"DD-MM-YYYY HH:mm\"));\r\n    const [updateMode, setUpdateMode] = useState(false);\r\n    const {onEditorStateChange, handleTime, editorState, errors } = useForm3(\r\n        submitForm,\r\n        validate\r\n      );\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/posts/byId/${id}`).then((response) => {\r\n            setPostObject(response.data);\r\n        });\r\n\r\n        axios.get(`http://localhost:5000/comments/${id}`).then((response) => {\r\n            setComments(response.data);\r\n        });\r\n\r\n    }, []);\r\n    const addComment = () => {\r\n\r\n        axios.post(\"http://localhost:5000/comments/\", { commentText: newComment, PostId: id },\r\n            {\r\n                headers: {\r\n                    accessToken: localStorage.getItem(\"accessToken\"),\r\n                },\r\n            }).then((response) => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    const commentAdd = {\r\n                        commentText: newComment,\r\n                        username: response.data.username\r\n                    };\r\n                    setComments([...comments, commentAdd]);\r\n                    setNewComment(\"\");\r\n                    window.location.href = `/post/${id}`;\r\n                }\r\n\r\n            })\r\n    };\r\n\r\n    const deleteComment = (commentId) => {\r\n\r\n        axios.delete(`http://localhost:5000/comments/${commentId}`, {\r\n            headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n            .then(() => {\r\n                setComments(\r\n                    comments.filter((val) => {\r\n                        return val.id != commentId;\r\n                    })\r\n                );\r\n            });\r\n    };\r\n\r\n    const deletePost = (id) => {\r\n        axios\r\n            .delete(`http://localhost:5000/posts/${id}`, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            })\r\n            .then(() => {\r\n                window.location.href = '/';\r\n            });\r\n\r\n    };\r\n\r\n    const editPost=()=> {\r\n        setUpdateMode(true);\r\n};\r\n\r\n    const saveUpdate = async (id) => {\r\n        try {\r\n          await axios.put(`http://localhost:5000/posts/${id}`, {\r\n              title,\r\n              topic,\r\n              location,\r\n              author,\r\n              dateStart,\r\n              postText,\r\n              \r\n          });\r\n          setUpdateMode(false)\r\n        } catch (err) {}\r\n      };\r\n\r\n    \r\n\r\n    const vistorClick = () => {\r\n        window.location.href = '/login';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='postPage'>\r\n                <div className='campaigns'>\r\n                    <div className='overlay'>\r\n                        {updateMode ?\r\n                            (<input type='text'\r\n                                value={postObject.title}\r\n                                className='inputPosttitle'\r\n                                autoFocus\r\n                                onChange={(e)=>setTitle(e.target.value)}\r\n                            />) : <h1 className='posttitle'>{postObject.title}</h1>\r\n                        }\r\n                        \r\n                        <div className='infoContainer'>\r\n                            <div className='lineOne'>\r\n                                    <div className='postTopic'>Topic: {updateMode ? (\r\n                                    <select id='inpuTopicSelection' className='inputTopic' name='topic' value={postObject.topic}\r\n                                        onChange={(e) => setTitle(e.target.value)}>\r\n                                    <option value='none' hidden>Select a topic</option>\r\n                                    <option value='sports'>Sports</option>\r\n                                    <option value='Marketing'>Marketing</option>\r\n                                    <option value='education'>Education</option>\r\n                                    <option value='society'>Society</option>\r\n                                    <option value='other'>Other</option>\r\n                                  </select>\r\n                                ) : <span>{postObject.topic}</span>}\r\n                                    </div>\r\n                                \r\n                                <div className='postLocation'>Location: {updateMode ?\r\n                                    (<input type='text'\r\n                                        value={postObject.location}\r\n                                        className='inputPostLocation'\r\n                                        autoFocus\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />) : <span>{ postObject.location }</span>}\r\n                                    </div>\r\n                            </div>\r\n                            <div className='lineTwo'>\r\n                                <div className='postAuthor'>Author: {postObject.username}</div>\r\n                                \r\n                                <div className='postDate'>Start Time: {updateMode ?\r\n                                    (<DatePicker className='datepick'\r\n                                    dateFormat=\"yyyy-MM-dd HH:mm\"\r\n                                    timeFormat=\"hh:mm\"\r\n                                    selected={dateStart}\r\n                                    name='startDate'\r\n                                    value={dateStart}\r\n                                    onChange={handleTime}\r\n                                    showTimeSelect\r\n                                  />) : <span>{ dateStart }</span>}</div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='postComment'>\r\n                <div className=\"deletePost\">\r\n                        {authState.username === postObject.username && (\r\n                            <button className='deletePostBtn'\r\n                                onClick={editPost}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"deletePost\">\r\n                        {authState.username === postObject.username && (\r\n                            <button className='deletePostBtn'\r\n                                onClick={() => {\r\n                                    deletePost(postObject.id);\r\n                                }}\r\n                            >\r\n                                Delete Post\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    <div className='postText'>\r\n                        <div className='textContent'>{ReactHtmlParser(postObject.postText)}</div>\r\n\r\n                    </div>\r\n                    <div className=\"comments\">\r\n                        <h1 className='commentTitle'> Make your comment here</h1>\r\n                        <div className='addComment'>\r\n                            <textarea type='text' placeholder=\"Add your comment here...\" autoComplete=\"off\" value={newComment} onChange={(event) => { setNewComment(event.target.value) }} />\r\n                        </div>\r\n                        <div className='commentButton'>\r\n                            {localStorage.getItem(\"accessToken\") ? <button className='commentBtn' type='submit' onClick={addComment}>\r\n                                Comment\r\n                            </button> : <button className='commentBtn' type='submit' onClick={vistorClick}>\r\n                                Comment\r\n                            </button>}\r\n\r\n                        </div>\r\n\r\n                        <div className='listOfComments'>\r\n                            {comments.map((comment, key) => {\r\n                                return (\r\n                                    <div key={key} className='comment'>\r\n                                        <label className='commentUser'>User: {comment.username}<span className='dateposted'>{moment(comment.createdAt).format(\"DD-MM-YYYY HH:mm:ss\")}</span></label>\r\n                                        <div className='textOfComment'>{comment.commentText}</div>\r\n                                        <div className='commentBtnContainer'>\r\n                                            <div className='tooltip'>{authState.username === comment.username && (<><DeleteIcon onClick={() => {\r\n                                                deleteComment(comment.id);\r\n                                            }} className='deleteIcon' /><span className='tooltipText'>Delete</span></>)}</div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}