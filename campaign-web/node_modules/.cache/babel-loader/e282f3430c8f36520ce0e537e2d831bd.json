{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport Axios from 'axios';\n\nconst useForm2 = callback => {\n  const [values, setValues] = useState({\n    username: '',\n    password: ''\n  });\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  Axios.defaults.withCredentials = true;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    Axios.post('http://localhost:5000/login', {\n      loginName: values.username,\n      loginPassword: values.password\n    }).then(response => {\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        setLoginStatus(response.data[0].user_name);\n        setIsSubmitting(true);\n        setUserLoggedIn(true);\n        window.location.href = '/';\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (isSubmitting) {\n      callback();\n      Axios.get('http://localhost:5000/login').then(response => {\n        if (response.data.loggedIn == true) {\n          setLoginStatus(response.data.user[0].user_name);\n        }\n      });\n    }\n  }, []);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    loginStatus,\n    userLoggedIn\n  };\n};\n\nexport default useForm2;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/accountBox/useForm2.js"],"names":["useState","useEffect","Axios","useForm2","callback","values","setValues","username","password","loginStatus","setLoginStatus","isSubmitting","setIsSubmitting","userLoggedIn","setUserLoggedIn","handleChange","e","name","value","target","defaults","withCredentials","handleSubmit","preventDefault","post","loginName","loginPassword","then","response","data","message","user_name","window","location","href","get","loggedIn","user"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAAD,CAApC;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AAEAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACY,IAAD,GAAQC;AAFA,KAAD,CAAT;AAKD,GARD;;AAUAhB,EAAAA,KAAK,CAACkB,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,QAAMC,YAAY,GAAGN,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACO,cAAF;AAEArB,IAAAA,KAAK,CAACsB,IAAN,CAAW,6BAAX,EAA0C;AACxCC,MAAAA,SAAS,EAAEpB,MAAM,CAACE,QADsB;AACZmB,MAAAA,aAAa,EAAErB,MAAM,CAACG;AADV,KAA1C,EAEGmB,IAFH,CAESC,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzBpB,QAAAA,cAAc,CAACkB,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAd;AAED,OAHD,MAGO;AACLpB,QAAAA,cAAc,CAACkB,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBE,SAAlB,CAAd;AACAnB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAkB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AAGF,KAdD;AAgBD,GAnBD;;AAqBAjC,EAAAA,SAAS,CACP,MAAM;AACJ,QAAIU,YAAJ,EAAkB;AAChBP,MAAAA,QAAQ;AACRF,MAAAA,KAAK,CAACiC,GAAN,CAAU,6BAAV,EAAyCR,IAAzC,CAA+CC,QAAD,IAAc;AAC1D,YAAIA,QAAQ,CAACC,IAAT,CAAcO,QAAd,IAA0B,IAA9B,EAAoC;AAClC1B,UAAAA,cAAc,CAACkB,QAAQ,CAACC,IAAT,CAAcQ,IAAd,CAAmB,CAAnB,EAAsBN,SAAvB,CAAd;AACD;AAEF,OALD;AAMD;AAEF,GAZM,EAYJ,EAZI,CAAT;AAgBA,SAAO;AAAEhB,IAAAA,YAAF;AAAgBO,IAAAA,YAAhB;AAA8BjB,IAAAA,MAA9B;AAAsCI,IAAAA,WAAtC;AAAmDI,IAAAA;AAAnD,GAAP;AACD,CA3DD;;AA6DA,eAAeV,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Axios from 'axios';\n\nconst useForm2 = (callback) => {\n  const [values, setValues] = useState({\n    username: '',\n    password: ''\n  });\n\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n\n  };\n\n  Axios.defaults.withCredentials = true;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    Axios.post('http://localhost:5000/login', {\n      loginName: values.username, loginPassword: values.password\n    }).then((response) => {\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n\n      } else {\n        setLoginStatus(response.data[0].user_name);\n        setIsSubmitting(true);\n        setUserLoggedIn(true);\n        window.location.href = '/';\n      }\n\n\n    });\n\n  };\n\n  useEffect(\n    () => {\n      if (isSubmitting) {\n        callback();\n        Axios.get('http://localhost:5000/login').then((response) => {\n          if (response.data.loggedIn == true) {\n            setLoginStatus(response.data.user[0].user_name);\n          }\n\n        })\n      }\n\n    }, []\n  );\n\n\n  return { handleChange, handleSubmit, values, loginStatus, userLoggedIn };\n};\n\nexport default useForm2;\n"]},"metadata":{},"sourceType":"module"}