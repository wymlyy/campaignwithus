{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\EditPost.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./textEditor.css\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport validate from \"../accountBox/validateInfoPost\";\nimport useForm3 from \"../accountBox/useForm3\";\n\nconst EditPost = submitForm => {\n  const {\n    handleChange,\n    editPost,\n    onEditorStateChange,\n    handleTime,\n    editorState,\n    startDate,\n    postText,\n    values,\n    errors\n  } = useForm3(submitForm, validate);\n  const [postObject, setPostObject] = useState({});\n\n  const uploadCallback = file => {\n    return new Promise((resolve, reject) => {\n      if (file) {\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          resolve({\n            data: {\n              link: e.target.result\n            }\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"postForm\",\n    onSubmit: editPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"postPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Create Your Own Campaign !\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Select One Topic:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"topicSelection\",\n    className: \"topic\",\n    name: \"topic\",\n    value: postObject.topic,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"none\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Select a topic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Marketing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Marketing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"education\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"society\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Society\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Other\")), errors.topic && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }\n  }, errors.topic)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Select Date and Time:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepick\",\n    dateFormat: \"yyyy-MM-dd HH:mm\",\n    timeFormat: \"hh:mm\",\n    selected: postObject.startDate,\n    name: \"startDate\",\n    value: postObject.startDate,\n    onChange: handleTime,\n    showTimeSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), errors.startDate && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 34\n    }\n  }, errors.startDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"otherInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaignLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"locationInput\",\n    type: \"text\",\n    name: \"location\",\n    value: postObject.location,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), errors.location && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, errors.location)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authorName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Author:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"author\",\n    name: \"username\",\n    value: postObject.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, errors.username))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"titleInput\",\n    name: \"title\",\n    value: postObject.title,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }\n  }, errors.title)), /*#__PURE__*/React.createElement(Editor, {\n    name: \"postText\",\n    value: postObject.postText,\n    editorState: editorState,\n    toolbarClassName: \"toolbarClassName\",\n    wrapperClassName: \"wrapperClassName\",\n    editorClassName: \"editorClassName\",\n    onEditorStateChange: onEditorStateChange,\n    toolbar: {\n      inline: {\n        inDropdown: true\n      },\n      list: {\n        inDropdown: true\n      },\n      textAlign: {\n        inDropdown: true\n      },\n      link: {\n        inDropdown: true\n      },\n      history: {\n        inDropdown: true\n      },\n      image: {\n        uploadEnabled: true,\n        uploadCallback: uploadCallback,\n        previewImage: true,\n        inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n        alt: {\n          present: false,\n          mandatory: false\n        },\n        defaultSize: {\n          height: 'auto',\n          width: 'auto'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), errors.postText && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, errors.postText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Update\"))));\n};\n\nexport default EditPost;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/EditPost.jsx"],"names":["React","useState","useEffect","useParams","axios","Editor","DatePicker","validate","useForm3","EditPost","submitForm","handleChange","editPost","onEditorStateChange","handleTime","editorState","startDate","postText","values","errors","postObject","setPostObject","uploadCallback","file","Promise","resolve","reject","reader","FileReader","onload","e","data","link","target","result","readAsDataURL","topic","location","username","title","inline","inDropdown","list","textAlign","history","image","uploadEnabled","previewImage","inputAccept","alt","present","mandatory","defaultSize","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./textEditor.css\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport validate from \"../accountBox/validateInfoPost\";\r\nimport useForm3 from \"../accountBox/useForm3\";\r\n\r\n\r\n\r\nconst EditPost = (submitForm) => {\r\n  const { handleChange, editPost, onEditorStateChange, handleTime, editorState, startDate, postText, values, errors } = useForm3(\r\n    submitForm,\r\n    validate\r\n  );\r\n  \r\n  const [postObject, setPostObject] = useState({});\r\n  \r\n  \r\n\r\n\r\n  const uploadCallback = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        if (file) {\r\n          let reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            resolve({ data: { link: e.target.result } })\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form id='postForm' onSubmit={editPost}>\r\n        <h1 className='postPageTitle'>Create Your Own Campaign !</h1>\r\n        <div className='selectInfo'>\r\n          <div className='selectTopic'>\r\n            <label>Select One Topic:</label>\r\n\r\n            <select id='topicSelection' className='topic' name='topic' value={postObject.topic} onChange={handleChange}>\r\n              <option value='none' hidden>Select a topic</option>\r\n              <option value='sports'>Sports</option>\r\n              <option value='Marketing'>Marketing</option>\r\n              <option value='education'>Education</option>\r\n              <option value='society'>Society</option>\r\n              <option value='other'>Other</option>\r\n            </select>\r\n            {errors.topic && <p className='errors'>{errors.topic}</p>}\r\n          </div>\r\n          <div className='selectTime'>\r\n            <label>Select Date and Time:</label>\r\n\r\n            <DatePicker className='datepick'\r\n              dateFormat=\"yyyy-MM-dd HH:mm\"\r\n              timeFormat=\"hh:mm\"\r\n              selected={postObject.startDate}\r\n              name='startDate'\r\n              value={postObject.startDate}\r\n              onChange={handleTime}\r\n              showTimeSelect\r\n            />\r\n            {errors.startDate && <p className='errors'>{errors.startDate}</p>}\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"otherInfo\">\r\n          <div className=\"campaignLocation\">\r\n            <label>Location:</label>\r\n\r\n            <input className='locationInput' type=\"text\" name='location' value={postObject.location} onChange={handleChange} />\r\n            {errors.location && <p className='errors'>{errors.location}</p>}\r\n          </div>\r\n          <div className=\"authorName\">\r\n            <label>Author:</label>\r\n\r\n            <input type=\"text\" className=\"author\" name='username' value={postObject.username} onChange={handleChange} />\r\n            {errors.username && <p className='errors'>{errors.username}</p>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"postTitle\">\r\n          <label>Title:</label>\r\n\r\n          <input type=\"text\" className=\"titleInput\" name='title' value={postObject.title} onChange={handleChange} />\r\n          {errors.title && <p className='errors'>{errors.title}</p>}\r\n        </div>\r\n\r\n        <Editor\r\n          name='postText'\r\n          value={postObject.postText}\r\n          editorState={editorState}\r\n          toolbarClassName=\"toolbarClassName\"\r\n          wrapperClassName=\"wrapperClassName\"\r\n          editorClassName=\"editorClassName\"\r\n          onEditorStateChange={onEditorStateChange}\r\n          toolbar={{\r\n            inline: { inDropdown: true },\r\n            list: { inDropdown: true },\r\n            textAlign: { inDropdown: true },\r\n            link: { inDropdown: true },\r\n            history: { inDropdown: true },\r\n            image: {\r\n              uploadEnabled: true,\r\n              uploadCallback: uploadCallback,\r\n              previewImage: true,\r\n              inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n              alt: { present: false, mandatory: false },\r\n              defaultSize: {\r\n                height: 'auto',\r\n                width: 'auto',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        {errors.postText && <p className='errors-content'>{errors.postText}</p>}\r\n        <div className='postBtnContainer'>\r\n          <button className='postButton' type='submit'>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}