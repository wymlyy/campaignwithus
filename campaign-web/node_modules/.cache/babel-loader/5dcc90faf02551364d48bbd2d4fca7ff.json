{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\Post.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../../App.css';\nimport './post.css';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { AuthContext } from '../../Context/AuthContext';\nexport default function Post() {\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  const dateTime = postObject.startDate;\n  let dateTimeParts = dateTime.split;\n  useEffect(() => {\n    axios.get(`http://localhost:5000/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:5000/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios.post(\"http://localhost:5000/comments/\", {\n      commentText: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        const commentAdd = {\n          commentText: newComment,\n          username: response.data.username\n        };\n        setComments([...comments, commentAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n\n  const deleteComment = id => {\n    axios.delete(`http://localhost:5000/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {\n        return val.id != id;\n      }));\n    });\n  };\n\n  const deletePost = id => {\n    axios.delete(`http://localhost:5000/posts/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      window.location.href = '/';\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaigns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"posttitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, postObject.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineOne\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"Topic: \", postObject.topic), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Location: \", postObject.location)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineTwo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postAuthor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Author: \", postObject.username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Start Time: \", postObject.startDate))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postComment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, postObject.postText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, authState.username === postObject.username && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      deletePost(postObject.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \" \", \"Delete Post\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"commentTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \" Make your comment here\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addComment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    placeholder: \"Add your comment here...\",\n    autoComplete: \"off\",\n    value: newComment,\n    onChange: event => {\n      setNewComment(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    type: \"submit\",\n    onClick: addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Comment\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listOfComments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, comments.map((comment, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"commentUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, \"User: \", comment.username, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dateposted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 96\n      }\n    }, comment.createdAt)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"textOfComment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, comment.commentText), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentBtnContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deleteComment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, authState.username === comment.username && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        deleteComment(comment.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 117\n      }\n    }, \"Delete\"))));\n  }))))));\n}","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/Post.js"],"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","Post","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","authState","dateTime","startDate","dateTimeParts","split","get","then","response","data","addComment","post","commentText","PostId","headers","accessToken","localStorage","getItem","error","alert","commentAdd","username","deleteComment","delete","filter","val","deletePost","window","location","href","title","topic","postText","event","target","value","map","comment","key","createdAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport '../../App.css';\r\nimport './post.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { AuthContext } from '../../Context/AuthContext';\r\n\r\nexport default function Post() {\r\n    let { id } = useParams();\r\n    const [postObject, setPostObject] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const { authState } = useContext(AuthContext);\r\n    const dateTime = postObject.startDate;\r\n    let dateTimeParts=dateTime.split\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/posts/byId/${id}`).then((response) => {\r\n            setPostObject(response.data);\r\n        });\r\n\r\n        axios.get(`http://localhost:5000/comments/${id}`).then((response) => {\r\n            setComments(response.data);\r\n        });\r\n    }, []);\r\n    const addComment = () => {\r\n\r\n        axios.post(\"http://localhost:5000/comments/\", { commentText: newComment, PostId: id },\r\n            {\r\n                headers: {\r\n                    accessToken: localStorage.getItem(\"accessToken\"),\r\n                },\r\n            }).then((response) => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    const commentAdd = {\r\n                        commentText: newComment,\r\n                        username: response.data.username\r\n                    };\r\n                    setComments([...comments, commentAdd]);\r\n                    setNewComment(\"\");\r\n                }\r\n\r\n            })\r\n    };\r\n\r\n    const deleteComment = (id) => {\r\n\r\n        axios.delete(`http://localhost:5000/comments/${id}`, {\r\n            headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n            .then(() => {\r\n                setComments(\r\n                    comments.filter((val) => {\r\n                        return val.id != id;\r\n                    })\r\n                );\r\n            });\r\n    };\r\n\r\n    const deletePost = (id) => {\r\n        axios\r\n            .delete(`http://localhost:5000/posts/${id}`, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            })\r\n            .then(() => {\r\n                window.location.href = '/';\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='postPage'>\r\n                <div className='campaigns'>\r\n                    <div className='overlay'>\r\n                        <h1 className='posttitle'>{postObject.title}</h1>\r\n                        <div className='infoContainer'>\r\n                            <div className='lineOne'>\r\n                                <div className='postTopic'>Topic: {postObject.topic}\r\n                                </div>\r\n                                <div className='postLocation'>Location: {postObject.location}</div>\r\n                            </div>\r\n                            <div className='lineTwo'>\r\n                                <div className='postAuthor'>Author: {postObject.username}</div>\r\n                                <div className='postDate'>Start Time: {postObject.startDate}</div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='postComment'>\r\n                    <div className='postText'>\r\n                        <div className='textContent'>{postObject.postText}</div>\r\n                        <div className=\"footer\">\r\n                            {authState.username === postObject.username && (\r\n                                <button\r\n                                    onClick={() => {\r\n                                        deletePost(postObject.id);\r\n                                    }}\r\n                                >\r\n                                    {\" \"}\r\n                                    Delete Post\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"comments\">\r\n                        <h1 className='commentTitle'> Make your comment here</h1>\r\n                        <div className='addComment'>\r\n                            <textarea type='text' placeholder=\"Add your comment here...\" autoComplete=\"off\" value={newComment} onChange={(event) => { setNewComment(event.target.value) }} />\r\n                        </div>\r\n                        <div className='commentButton'>\r\n                        <button className='postButton' type='submit' onClick={addComment}>\r\n                            Comment\r\n                        </button>\r\n                        </div>\r\n                        \r\n                        <div className='listOfComments'>\r\n                            {comments.map((comment, key) => {\r\n                                return (\r\n                                    <div key={key} className='comment'>\r\n                                        <label className='commentUser'>User: {comment.username}<span className='dateposted'>{comment.createdAt}</span></label>\r\n                                        <div className='textOfComment'>{comment.commentText}</div>\r\n                                        <div className='commentBtnContainer'>\r\n                                        <div className='deleteComment'>{authState.username === comment.username && (<button onClick={() => {\r\n                                            deleteComment(comment.id);\r\n                                        }}>Delete</button>)}</div>\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}