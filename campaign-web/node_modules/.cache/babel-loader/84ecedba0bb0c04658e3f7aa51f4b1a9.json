{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\pages\\\\EditPost.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, ContentState, convertFromRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport DatePicker from \"react-datepicker\";\nimport { AuthContext } from '../../Context/AuthContext';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./textEditor.css\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport validate from \"../accountBox/validateInfoPost\";\nimport useForm3 from \"../accountBox/useForm3\";\n\nconst EditPost = submitForm => {\n  const {\n    errors\n  } = useForm3(submitForm, validate);\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [topic, setTopic] = useState(\"\");\n  const [cover, setCover] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [startDate, setStartDate] = useState(new Date());\n  const [postText, setPostText] = useState(\"\"); // const postText = stateToHTML(editorState.getCurrentContent());\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/posts/byId/${id}`).then(response => {\n      let postContent = response.data.postText;\n      let convertText = ReactHtmlParser(postContent).toString();\n      let contentState = ContentState.createFromText(convertText);\n      setTopic(response.data.topic);\n      setCover(response.data.cover);\n      setTitle(response.data.title);\n      setLocation(response.data.location);\n      setPostText(response.data.postText);\n      setStartDate(response.data.startDate);\n      setEditorState(EditorState.createWithContent(ContentState.createFromText(convertText)));\n      setPostObject(response.data);\n      console.log(typeof editorState);\n    });\n  }, []);\n\n  const handleFile = async e => {\n    const uploadFile = e.target.files[0];\n    const base64 = await convertBase64(uploadFile);\n    setCover(base64);\n    console.log(typeof cover);\n  };\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n\n        fileReader.onerror = error => {\n          reject(error);\n        };\n      };\n    });\n  };\n\n  const handleTime = date => {\n    setStartDate(date);\n  };\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  }; // const editPost = () => {\n  //   if (Object.keys(errors).length === 0) {\n  //     axios.put(`http://localhost:5000/posts/${id}`, {\n  //       topic: topic,\n  //       startDate: startDate,\n  //       location: location,\n  //       username: username,\n  //       title: title,\n  //       postText: postText\n  //     }, {\n  //       headers: { accessToken: localStorage.getItem(\"accessToken\") },\n  //     }).then((response) => {\n  //       window.location.href = `/post/${id}`;\n  //     });\n  //   }\n  // }\n\n\n  const editPost = () => {\n    axios.put(\"http://localhost:5000/posts/title\", {\n      newTitle: title,\n      id: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    });\n    axios.put(\"http://localhost:5000/posts/topic\", {\n      newTopic: topic,\n      id: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    });\n    axios.put(\"http://localhost:5000/posts/location\", {\n      newLocation: location,\n      id: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    });\n    axios.put(\"http://localhost:5000/posts/startDate\", {\n      newStartDate: startDate,\n      id: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    });\n    axios.put(\"http://localhost:5000/posts/cover\", {\n      newCover: cover,\n      id: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    });\n    axios.put(\"http://localhost:5000/posts/postText\", {\n      newPostText: postText,\n      id: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    });\n    setPostObject({ ...postObject,\n      title: title,\n      topic: topic,\n      location: location,\n      startDate: startDate,\n      cover: cover,\n      postText: postText\n    });\n  };\n\n  const uploadCallback = file => {\n    return new Promise((resolve, reject) => {\n      if (file) {\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          resolve({\n            data: {\n              link: e.target.result\n            }\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"postForm\",\n    onClick: () => {\n      if (authState.username === postObject.username) {\n        editPost();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"postPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Create Your Own Campaign !\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Select One Topic:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"topicSelection\",\n    className: \"topic\",\n    name: \"topic\",\n    value: topic,\n    onChange: e => {\n      setTopic(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"none\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Select a topic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Marketing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, \"Marketing\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"education\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"Education\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"society\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"Society\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, \"Other\")), errors.topic && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 30\n    }\n  }, errors.topic)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Select Date and Time:\"), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepick\",\n    dateFormat: \"yyyy-MM-dd HH:mm\",\n    timeFormat: \"HH:mm\",\n    selected: authState.startDate,\n    name: \"startDate\",\n    value: moment(startDate).format(\"DD-MM-YYYY HH:mm:ss\"),\n    onChange: handleTime,\n    showTimeSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }), errors.startDate && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 34\n    }\n  }, errors.startDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"otherInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaignLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, \"Location:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"locationInput\",\n    type: \"text\",\n    name: \"location\",\n    value: location,\n    onChange: e => {\n      setLocation(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }), errors.location && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, errors.location)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authorName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"Cover:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"uploadFile\",\n    name: \"cover\",\n    accept: \"image/*\",\n    onChange: e => {\n      handleFile(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"titleInput\",\n    name: \"title\",\n    value: title,\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 28\n    }\n  }, errors.title)), /*#__PURE__*/React.createElement(Editor, {\n    name: \"postText\",\n    value: postText,\n    editorState: editorState,\n    toolbarClassName: \"toolbarClassName\",\n    wrapperClassName: \"wrapperClassName\",\n    editorClassName: \"editorClassName\",\n    onEditorStateChange: onEditorStateChange,\n    toolbar: {\n      inline: {\n        inDropdown: true\n      },\n      list: {\n        inDropdown: true\n      },\n      textAlign: {\n        inDropdown: true\n      },\n      link: {\n        inDropdown: true\n      },\n      history: {\n        inDropdown: true\n      },\n      image: {\n        uploadEnabled: true,\n        uploadCallback: uploadCallback,\n        previewImage: true,\n        inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n        alt: {\n          present: false,\n          mandatory: false\n        },\n        defaultSize: {\n          height: 'auto',\n          width: 'auto'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }), errors.postText && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"errors-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, errors.postText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, \"Update\"))));\n};\n\nexport default EditPost;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/pages/EditPost.jsx"],"names":["React","useState","useEffect","useContext","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Editor","EditorState","convertToRaw","ContentState","convertFromRaw","stateToHTML","DatePicker","AuthContext","useParams","axios","moment","validate","useForm3","EditPost","submitForm","errors","id","postObject","setPostObject","authState","topic","setTopic","cover","setCover","title","setTitle","location","setLocation","editorState","setEditorState","createEmpty","startDate","setStartDate","Date","postText","setPostText","get","then","response","postContent","data","convertText","toString","contentState","createFromText","createWithContent","console","log","handleFile","e","uploadFile","target","files","base64","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","handleTime","date","onEditorStateChange","editPost","put","newTitle","headers","accessToken","localStorage","getItem","newTopic","newLocation","newStartDate","newCover","newPostText","uploadCallback","reader","link","username","value","format","inline","inDropdown","list","textAlign","history","image","uploadEnabled","previewImage","inputAccept","alt","present","mandatory","defaultSize","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw, ContentState, convertFromRaw } from \"draft-js\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./textEditor.css\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport validate from \"../accountBox/validateInfoPost\";\r\nimport useForm3 from \"../accountBox/useForm3\";\r\n\r\n\r\n\r\nconst EditPost = (submitForm) => {\r\n  const { errors } = useForm3(\r\n    submitForm,\r\n    validate\r\n  );\r\n  let { id } = useParams();\r\n  const [postObject, setPostObject] = useState({});\r\n  const { authState } = useContext(AuthContext);\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [cover, setCover] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [postText, setPostText] = useState(\"\");\r\n  // const postText = stateToHTML(editorState.getCurrentContent());\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/posts/byId/${id}`).then((response) => {\r\n      let postContent = response.data.postText;\r\n      let convertText = ReactHtmlParser(postContent).toString();\r\n      let contentState = ContentState.createFromText(convertText);\r\n      setTopic(response.data.topic);\r\n      setCover(response.data.cover);\r\n      setTitle(response.data.title);\r\n      setLocation(response.data.location);\r\n      setPostText(response.data.postText);\r\n      setStartDate(response.data.startDate);\r\n      setEditorState(EditorState.createWithContent(ContentState.createFromText(convertText)));\r\n      setPostObject(response.data);\r\n      console.log(typeof (editorState));\r\n\r\n    });\r\n\r\n  }, []);\r\n\r\n  const handleFile = async (e) => {\r\n    const uploadFile = e.target.files[0];\r\n    const base64 = await convertBase64(uploadFile);\r\n    setCover(base64);\r\n    console.log(typeof (cover));\r\n  }\r\n\r\n  const convertBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n        fileReader.onerror = (error) => {\r\n          reject(error);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleTime = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState);\r\n\r\n  };\r\n\r\n  // const editPost = () => {\r\n  //   if (Object.keys(errors).length === 0) {\r\n  //     axios.put(`http://localhost:5000/posts/${id}`, {\r\n  //       topic: topic,\r\n  //       startDate: startDate,\r\n  //       location: location,\r\n  //       username: username,\r\n  //       title: title,\r\n  //       postText: postText\r\n  //     }, {\r\n  //       headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n  //     }).then((response) => {\r\n  //       window.location.href = `/post/${id}`;\r\n  //     });\r\n\r\n\r\n  //   }\r\n  // }\r\n\r\n  const editPost = () => {\r\n\r\n\r\n    axios.put(\r\n      \"http://localhost:5000/posts/title\",\r\n      {\r\n        newTitle: title,\r\n        id: id,\r\n      },\r\n      {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      }\r\n    )\r\n\r\n    axios.put(\r\n      \"http://localhost:5000/posts/topic\",\r\n      {\r\n        newTopic: topic,\r\n        id: id,\r\n      },\r\n      {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      }\r\n    )\r\n\r\n    axios.put(\r\n      \"http://localhost:5000/posts/location\",\r\n      {\r\n        newLocation: location,\r\n        id: id,\r\n      },\r\n      {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      }\r\n    )\r\n\r\n    axios.put(\r\n      \"http://localhost:5000/posts/startDate\",\r\n      {\r\n        newStartDate: startDate,\r\n        id: id,\r\n      },\r\n      {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      }\r\n    )\r\n\r\n    axios.put(\r\n      \"http://localhost:5000/posts/cover\",\r\n      {\r\n        newCover: cover,\r\n        id: id,\r\n      },\r\n      {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      }\r\n    )\r\n\r\n    axios.put(\r\n      \"http://localhost:5000/posts/postText\",\r\n      {\r\n        newPostText: postText,\r\n        id: id,\r\n      },\r\n      {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      }\r\n    )\r\n\r\n\r\n    setPostObject({ ...postObject, title: title, topic: topic, location: location, startDate: startDate, cover: cover, postText: postText });\r\n\r\n  }\r\n\r\n  const uploadCallback = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        if (file) {\r\n          let reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            resolve({ data: { link: e.target.result } })\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form id='postForm' onClick={() => {\r\n        if (authState.username === postObject.username) {\r\n          editPost();\r\n        }\r\n      }}>\r\n        <h1 className='postPageTitle'>Create Your Own Campaign !</h1>\r\n        <div className='selectInfo'>\r\n          <div className='selectTopic'>\r\n            <label>Select One Topic:</label>\r\n\r\n            <select id='topicSelection' className='topic' name='topic' value={topic} onChange={(e) => {\r\n              setTopic(e.target.value)\r\n            }}>\r\n              <option value='none' hidden>Select a topic</option>\r\n              <option value='sports'>Sports</option>\r\n              <option value='Marketing'>Marketing</option>\r\n              <option value='education'>Education</option>\r\n              <option value='society'>Society</option>\r\n              <option value='other'>Other</option>\r\n            </select>\r\n            {errors.topic && <p className='errors'>{errors.topic}</p>}\r\n          </div>\r\n          <div className='selectTime'>\r\n            <label>Select Date and Time:</label>\r\n\r\n            <DatePicker className='datepick'\r\n              dateFormat=\"yyyy-MM-dd HH:mm\"\r\n              timeFormat=\"HH:mm\"\r\n              selected={authState.startDate}\r\n              name='startDate'\r\n              value={moment(startDate).format(\"DD-MM-YYYY HH:mm:ss\")}\r\n              onChange={handleTime}\r\n              showTimeSelect\r\n            />\r\n            {errors.startDate && <p className='errors'>{errors.startDate}</p>}\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"otherInfo\">\r\n          <div className=\"campaignLocation\">\r\n            <label>Location:</label>\r\n\r\n            <input className='locationInput' type=\"text\" name='location' value={location} onChange={(e) => {\r\n              setLocation(e.target.value)\r\n            }} />\r\n            {errors.location && <p className='errors'>{errors.location}</p>}\r\n          </div>\r\n          <div className=\"authorName\">\r\n            <label>Cover:</label>\r\n            <div className='author'>\r\n              <input type=\"file\" className=\"uploadFile\" name='cover' accept=\"image/*\" onChange={(e) => { handleFile(e) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"postTitle\">\r\n          <label>Title:</label>\r\n\r\n          <input type=\"text\" className=\"titleInput\" name='title' value={title} onChange={(e) => {\r\n            setTitle(e.target.value)\r\n          }} />\r\n          {errors.title && <p className='errors'>{errors.title}</p>}\r\n        </div>\r\n\r\n        <Editor\r\n          name='postText'\r\n          value={postText}\r\n          editorState={editorState}\r\n          toolbarClassName=\"toolbarClassName\"\r\n          wrapperClassName=\"wrapperClassName\"\r\n          editorClassName=\"editorClassName\"\r\n          onEditorStateChange={onEditorStateChange}\r\n          toolbar={{\r\n            inline: { inDropdown: true },\r\n            list: { inDropdown: true },\r\n            textAlign: { inDropdown: true },\r\n            link: { inDropdown: true },\r\n            history: { inDropdown: true },\r\n            image: {\r\n              uploadEnabled: true,\r\n              uploadCallback: uploadCallback,\r\n              previewImage: true,\r\n              inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n              alt: { present: false, mandatory: false },\r\n              defaultSize: {\r\n                height: 'auto',\r\n                width: 'auto',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        {errors.postText && <p className='errors-content'>{errors.postText}</p>}\r\n        <div className='postBtnContainer'>\r\n          <button className='postButton' type='submit'>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}