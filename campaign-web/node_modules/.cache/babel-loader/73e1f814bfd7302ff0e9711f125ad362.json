{"ast":null,"code":"var _jsxFileName = \"D:\\\\signup form\\\\Campaign-with-us\\\\campaign-web\\\\src\\\\components\\\\Cards.js\";\nimport React from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment';\nimport { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nfunction Cards() {\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [signedPosts, setSignedPosts] = useState([]);\n  const {\n    authState\n  } = useContext(AuthContext);\n  let history = useHistory();\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/posts\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(response.data.listOfPosts);\n      setSignedPosts(response.data.signedPosts.map(sign => {\n        return sign.PostId;\n      }));\n    });\n  }, []);\n\n  const signAPost = postId => {\n    axios.post(\"http://localhost:5000/signature\", {\n      PostId: postId\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.map(post => {\n        if (post.id === postId) {\n          if (response.data.signed) {\n            return { ...post,\n              Signatures: [...post.Signatures, 0]\n            };\n          } else {\n            const signatureArray = post.Signatures;\n            signatureArray.pop();\n            return { ...post,\n              Signatures: signatureArray\n            };\n          }\n        } else {\n          return post;\n        }\n      }));\n\n      if (signedPosts.includes(postId)) {\n        setSignedPosts(signedPosts.filter(id => {\n          return id != postId;\n        }));\n      } else {\n        setSignedPosts([...signedPosts, postId]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Check out these fantastic Campaigns!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"homeCards_campaign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, listOfPosts.slice(listOfPosts.length - 2, listOfPosts.length).reverse().map((value, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"homeCard\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardItem, {\n      key: key,\n      src: \"images/img-9.jpg\",\n      title: value.title,\n      text: value.postText,\n      topic: value.topic,\n      username: value.username,\n      dateTime: moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\"),\n      path: `/post/${value.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, !signedPosts.includes(value.id) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 57\n      }\n    }, \"Sign\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSigned\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }\n    }, \"Signed\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, value.Signatures.length)));\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, listOfPosts.slice(listOfPosts.length - 5, listOfPosts.length - 2).reverse().map((value, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"homeCard\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardItem, {\n      key: key,\n      src: \"images/img-9.jpg\",\n      title: value.title,\n      text: value.postText,\n      topic: value.topic,\n      username: value.username,\n      dateTime: moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\"),\n      path: `/post/${value.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, !signedPosts.includes(value.id) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSign\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 57\n      }\n    }, \"Sign\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btnSigned\",\n      onClick: () => {\n        signAPost(value.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 24\n      }\n    }, \"Signed\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"signNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, value.Signatures.length)));\n  })))));\n}\n\nexport default Cards;","map":{"version":3,"sources":["D:/signup form/Campaign-with-us/campaign-web/src/components/Cards.js"],"names":["React","CardItem","axios","useHistory","moment","useEffect","useState","useContext","AuthContext","Cards","listOfPosts","setListOfPosts","signedPosts","setSignedPosts","authState","history","get","headers","accessToken","localStorage","getItem","then","response","data","map","sign","PostId","signAPost","postId","post","id","signed","Signatures","signatureArray","pop","includes","filter","slice","length","reverse","value","key","title","postText","topic","username","createdAt","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment';\nimport { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n\nfunction Cards() {\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [signedPosts, setSignedPosts] = useState([]);\n  const { authState } = useContext(AuthContext);\n  let history = useHistory();\n\n  useEffect(() => {\n\n    axios.get(\"http://localhost:5000/posts\", {\n      headers: { accessToken: localStorage.getItem(\"accessToken\") },\n    }).then((response) => {\n      setListOfPosts(response.data.listOfPosts);\n      setSignedPosts(response.data.signedPosts.map((sign) => {\n        return sign.PostId;\n      }))\n    });\n  }, []);\n\n  const signAPost = (postId) => {\n    axios.post(\"http://localhost:5000/signature\", {\n      PostId: postId\n    },\n      { headers: { accessToken: localStorage.getItem(\"accessToken\") } }\n    ).then((response) => {\n      setListOfPosts(listOfPosts.map((post) => {\n        if (post.id === postId) {\n          if (response.data.signed) {\n            return { ...post, Signatures: [...post.Signatures, 0] };\n          } else {\n            const signatureArray = post.Signatures;\n            signatureArray.pop();\n            return { ...post, Signatures: signatureArray };\n          }\n        } else {\n          return post;\n        }\n      })\n      );\n\n      if (signedPosts.includes(postId)) {\n        setSignedPosts(\n          signedPosts.filter((id) => {\n            return id != postId;\n          })\n        );\n      } else {\n        setSignedPosts([...signedPosts, postId]);\n      }\n    });\n  };\n  return (\n    <div className='cards'>\n      <h1>Check out these fantastic Campaigns!</h1>\n      <div className='cards__container'>\n        <div className='cards__wrapper' >\n\n          <ul className='homeCards_campaign'>\n            {listOfPosts.slice(listOfPosts.length - 2, listOfPosts.length).reverse().map((value, key) => {\n              return (\n                <div className='homeCard' key={key}>\n\n                  <CardItem key={key}\n                    src='images/img-9.jpg'\n                    title={value.title}\n                    text={value.postText}\n                    topic={value.topic}\n                    username={value.username}\n                    dateTime={moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\")}\n                    path={`/post/${value.id}`}\n                  />\n                  <div className='signContainer'>\n                    {!signedPosts.includes(value.id) ? (<button className='btnSign' onClick={() => {\n                      signAPost(value.id);\n                    }}>Sign</button>) :\n                      (<button className='btnSigned' onClick={() => {\n                        signAPost(value.id);\n                      }}>Signed</button>)}\n\n                    <label className='signNo'>{value.Signatures.length}</label>\n                  </div>\n\n                </div>\n              )\n            })}\n          </ul>\n          <ul className='cards__items'>\n            {listOfPosts.slice(listOfPosts.length - 5, listOfPosts.length - 2).reverse().map((value, key) => {\n              return (\n\n                <div className='homeCard' key={key}>\n                  <CardItem key={key}\n                    src='images/img-9.jpg'\n                    title={value.title}\n                    text={value.postText}\n                    topic={value.topic}\n                    username={value.username}\n                    dateTime={moment(value.createdAt).format(\"DD-MM-YYYY HH:mm:ss\")}\n                    path={`/post/${value.id}`}\n                  ></CardItem>\n                  <div className='signContainer'>\n                    {!signedPosts.includes(value.id) ? (<button className='btnSign' onClick={() => {\n                      signAPost(value.id);\n                    }}>Sign</button>) :\n                      (<button className='btnSigned' onClick={() => {\n                        signAPost(value.id);\n                      }}>Signed</button>)}\n\n                    <label className='signNo'>{value.Signatures.length}</label>\n                  </div>\n\n                </div>\n\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}